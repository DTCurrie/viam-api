// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,ts_nocheck
// @generated from protobuf file "robot/v1/robot.proto" (package "viam.robot.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../google/protobuf/duration_pb";
import { Timestamp } from "../../google/protobuf/timestamp_pb";
import { Struct } from "../../google/protobuf/struct_pb";
import { ResourceName } from "../../common/v1/common_pb";
import { Transform } from "../../common/v1/common_pb";
import { PoseInFrame } from "../../common/v1/common_pb";
/**
 * @generated from protobuf message viam.robot.v1.FrameSystemConfig
 */
export interface FrameSystemConfig {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: viam.common.v1.PoseInFrame pose_in_parent_frame = 2;
     */
    poseInParentFrame?: PoseInFrame;
    /**
     * @generated from protobuf field: bytes model_json = 3;
     */
    modelJson: Uint8Array;
}
/**
 * @generated from protobuf message viam.robot.v1.FrameSystemConfigRequest
 */
export interface FrameSystemConfigRequest {
    /**
     * pose information on any additional reference frames that are needed
     * to supplement the robot's frame system
     *
     * @generated from protobuf field: repeated viam.common.v1.Transform supplemental_transforms = 1;
     */
    supplementalTransforms: Transform[];
}
/**
 * @generated from protobuf message viam.robot.v1.FrameSystemConfigResponse
 */
export interface FrameSystemConfigResponse {
    /**
     * @generated from protobuf field: repeated viam.robot.v1.FrameSystemConfig frame_system_configs = 1;
     */
    frameSystemConfigs: FrameSystemConfig[];
}
/**
 * @generated from protobuf message viam.robot.v1.TransformPoseRequest
 */
export interface TransformPoseRequest {
    /**
     * the original pose to transform along with the reference frame in
     * which it was observed
     *
     * @generated from protobuf field: viam.common.v1.PoseInFrame source = 1;
     */
    source?: PoseInFrame;
    /**
     * the reference frame into which the source pose should be transformed,
     * if unset this defaults to the "world" reference frame
     *
     * @generated from protobuf field: string destination = 2;
     */
    destination: string;
    /**
     * pose information on any additional reference frames that are needed
     * to perform the transform
     *
     * @generated from protobuf field: repeated viam.common.v1.Transform supplemental_transforms = 3;
     */
    supplementalTransforms: Transform[];
}
/**
 * @generated from protobuf message viam.robot.v1.TransformPoseResponse
 */
export interface TransformPoseResponse {
    /**
     * @generated from protobuf field: viam.common.v1.PoseInFrame pose = 1;
     */
    pose?: PoseInFrame;
}
/**
 * @generated from protobuf message viam.robot.v1.ResourceNamesRequest
 */
export interface ResourceNamesRequest {
}
/**
 * @generated from protobuf message viam.robot.v1.ResourceNamesResponse
 */
export interface ResourceNamesResponse {
    /**
     * @generated from protobuf field: repeated viam.common.v1.ResourceName resources = 1;
     */
    resources: ResourceName[];
}
/**
 * @generated from protobuf message viam.robot.v1.ResourceRPCSubtype
 */
export interface ResourceRPCSubtype {
    /**
     * @generated from protobuf field: viam.common.v1.ResourceName subtype = 1;
     */
    subtype?: ResourceName;
    /**
     * @generated from protobuf field: string proto_service = 2;
     */
    protoService: string;
}
/**
 * @generated from protobuf message viam.robot.v1.ResourceRPCSubtypesRequest
 */
export interface ResourceRPCSubtypesRequest {
}
/**
 * @generated from protobuf message viam.robot.v1.ResourceRPCSubtypesResponse
 */
export interface ResourceRPCSubtypesResponse {
    /**
     * @generated from protobuf field: repeated viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1;
     */
    resourceRpcSubtypes: ResourceRPCSubtype[];
}
/**
 * @generated from protobuf message viam.robot.v1.Operation
 */
export interface Operation {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string method = 2;
     */
    method: string;
    /**
     * @generated from protobuf field: google.protobuf.Struct arguments = 3;
     */
    arguments?: Struct;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp started = 4;
     */
    started?: Timestamp;
}
/**
 * @generated from protobuf message viam.robot.v1.GetOperationsRequest
 */
export interface GetOperationsRequest {
}
/**
 * @generated from protobuf message viam.robot.v1.GetOperationsResponse
 */
export interface GetOperationsResponse {
    /**
     * @generated from protobuf field: repeated viam.robot.v1.Operation operations = 1;
     */
    operations: Operation[];
}
/**
 * @generated from protobuf message viam.robot.v1.CancelOperationRequest
 */
export interface CancelOperationRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message viam.robot.v1.CancelOperationResponse
 */
export interface CancelOperationResponse {
}
/**
 * @generated from protobuf message viam.robot.v1.BlockForOperationRequest
 */
export interface BlockForOperationRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message viam.robot.v1.BlockForOperationResponse
 */
export interface BlockForOperationResponse {
}
// Discovery

/**
 * @generated from protobuf message viam.robot.v1.DiscoveryQuery
 */
export interface DiscoveryQuery {
    /**
     * @generated from protobuf field: string subtype = 1;
     */
    subtype: string;
    /**
     * @generated from protobuf field: string model = 2;
     */
    model: string;
}
/**
 * @generated from protobuf message viam.robot.v1.Discovery
 */
export interface Discovery {
    /**
     * @generated from protobuf field: viam.robot.v1.DiscoveryQuery query = 1;
     */
    query?: DiscoveryQuery;
    /**
     * @generated from protobuf field: google.protobuf.Struct results = 2;
     */
    results?: Struct;
}
/**
 * @generated from protobuf message viam.robot.v1.DiscoverComponentsRequest
 */
export interface DiscoverComponentsRequest {
    /**
     * @generated from protobuf field: repeated viam.robot.v1.DiscoveryQuery queries = 1;
     */
    queries: DiscoveryQuery[];
}
/**
 * @generated from protobuf message viam.robot.v1.DiscoverComponentsResponse
 */
export interface DiscoverComponentsResponse {
    /**
     * @generated from protobuf field: repeated viam.robot.v1.Discovery discovery = 1;
     */
    discovery: Discovery[];
}
/**
 * @generated from protobuf message viam.robot.v1.Status
 */
export interface Status {
    /**
     * @generated from protobuf field: viam.common.v1.ResourceName name = 1;
     */
    name?: ResourceName;
    /**
     * @generated from protobuf field: google.protobuf.Struct status = 2;
     */
    status?: Struct;
}
/**
 * @generated from protobuf message viam.robot.v1.GetStatusRequest
 */
export interface GetStatusRequest {
    /**
     * @generated from protobuf field: repeated viam.common.v1.ResourceName resource_names = 1;
     */
    resourceNames: ResourceName[];
}
/**
 * @generated from protobuf message viam.robot.v1.GetStatusResponse
 */
export interface GetStatusResponse {
    /**
     * @generated from protobuf field: repeated viam.robot.v1.Status status = 1;
     */
    status: Status[];
}
/**
 * @generated from protobuf message viam.robot.v1.StreamStatusRequest
 */
export interface StreamStatusRequest {
    /**
     * @generated from protobuf field: repeated viam.common.v1.ResourceName resource_names = 1;
     */
    resourceNames: ResourceName[];
    /**
     * @generated from protobuf field: google.protobuf.Duration every = 2;
     */
    every?: Duration; // how often to send a new status.
}
/**
 * @generated from protobuf message viam.robot.v1.StreamStatusResponse
 */
export interface StreamStatusResponse {
    /**
     * @generated from protobuf field: repeated viam.robot.v1.Status status = 1;
     */
    status: Status[];
}
/**
 * @generated from protobuf message viam.robot.v1.StopExtraParameters
 */
export interface StopExtraParameters {
    /**
     * @generated from protobuf field: viam.common.v1.ResourceName name = 1;
     */
    name?: ResourceName;
    /**
     * @generated from protobuf field: google.protobuf.Struct params = 2;
     */
    params?: Struct;
}
/**
 * @generated from protobuf message viam.robot.v1.StopAllRequest
 */
export interface StopAllRequest {
    /**
     * @generated from protobuf field: repeated viam.robot.v1.StopExtraParameters extra = 99;
     */
    extra: StopExtraParameters[];
}
/**
 * @generated from protobuf message viam.robot.v1.StopAllResponse
 */
export interface StopAllResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class FrameSystemConfig$Type extends MessageType<FrameSystemConfig> {
    constructor() {
        super("viam.robot.v1.FrameSystemConfig", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pose_in_parent_frame", kind: "message", T: () => PoseInFrame },
            { no: 3, name: "model_json", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.FrameSystemConfig
 */
export const FrameSystemConfig = new FrameSystemConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FrameSystemConfigRequest$Type extends MessageType<FrameSystemConfigRequest> {
    constructor() {
        super("viam.robot.v1.FrameSystemConfigRequest", [
            { no: 1, name: "supplemental_transforms", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Transform }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.FrameSystemConfigRequest
 */
export const FrameSystemConfigRequest = new FrameSystemConfigRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FrameSystemConfigResponse$Type extends MessageType<FrameSystemConfigResponse> {
    constructor() {
        super("viam.robot.v1.FrameSystemConfigResponse", [
            { no: 1, name: "frame_system_configs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FrameSystemConfig }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.FrameSystemConfigResponse
 */
export const FrameSystemConfigResponse = new FrameSystemConfigResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransformPoseRequest$Type extends MessageType<TransformPoseRequest> {
    constructor() {
        super("viam.robot.v1.TransformPoseRequest", [
            { no: 1, name: "source", kind: "message", T: () => PoseInFrame },
            { no: 2, name: "destination", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "supplemental_transforms", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Transform }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.TransformPoseRequest
 */
export const TransformPoseRequest = new TransformPoseRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransformPoseResponse$Type extends MessageType<TransformPoseResponse> {
    constructor() {
        super("viam.robot.v1.TransformPoseResponse", [
            { no: 1, name: "pose", kind: "message", T: () => PoseInFrame }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.TransformPoseResponse
 */
export const TransformPoseResponse = new TransformPoseResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceNamesRequest$Type extends MessageType<ResourceNamesRequest> {
    constructor() {
        super("viam.robot.v1.ResourceNamesRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.ResourceNamesRequest
 */
export const ResourceNamesRequest = new ResourceNamesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceNamesResponse$Type extends MessageType<ResourceNamesResponse> {
    constructor() {
        super("viam.robot.v1.ResourceNamesResponse", [
            { no: 1, name: "resources", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceName }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.ResourceNamesResponse
 */
export const ResourceNamesResponse = new ResourceNamesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceRPCSubtype$Type extends MessageType<ResourceRPCSubtype> {
    constructor() {
        super("viam.robot.v1.ResourceRPCSubtype", [
            { no: 1, name: "subtype", kind: "message", T: () => ResourceName },
            { no: 2, name: "proto_service", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.ResourceRPCSubtype
 */
export const ResourceRPCSubtype = new ResourceRPCSubtype$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceRPCSubtypesRequest$Type extends MessageType<ResourceRPCSubtypesRequest> {
    constructor() {
        super("viam.robot.v1.ResourceRPCSubtypesRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.ResourceRPCSubtypesRequest
 */
export const ResourceRPCSubtypesRequest = new ResourceRPCSubtypesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceRPCSubtypesResponse$Type extends MessageType<ResourceRPCSubtypesResponse> {
    constructor() {
        super("viam.robot.v1.ResourceRPCSubtypesResponse", [
            { no: 1, name: "resource_rpc_subtypes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceRPCSubtype }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.ResourceRPCSubtypesResponse
 */
export const ResourceRPCSubtypesResponse = new ResourceRPCSubtypesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Operation$Type extends MessageType<Operation> {
    constructor() {
        super("viam.robot.v1.Operation", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "method", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "arguments", kind: "message", T: () => Struct },
            { no: 4, name: "started", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.Operation
 */
export const Operation = new Operation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOperationsRequest$Type extends MessageType<GetOperationsRequest> {
    constructor() {
        super("viam.robot.v1.GetOperationsRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.GetOperationsRequest
 */
export const GetOperationsRequest = new GetOperationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOperationsResponse$Type extends MessageType<GetOperationsResponse> {
    constructor() {
        super("viam.robot.v1.GetOperationsResponse", [
            { no: 1, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Operation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.GetOperationsResponse
 */
export const GetOperationsResponse = new GetOperationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CancelOperationRequest$Type extends MessageType<CancelOperationRequest> {
    constructor() {
        super("viam.robot.v1.CancelOperationRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.CancelOperationRequest
 */
export const CancelOperationRequest = new CancelOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CancelOperationResponse$Type extends MessageType<CancelOperationResponse> {
    constructor() {
        super("viam.robot.v1.CancelOperationResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.CancelOperationResponse
 */
export const CancelOperationResponse = new CancelOperationResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockForOperationRequest$Type extends MessageType<BlockForOperationRequest> {
    constructor() {
        super("viam.robot.v1.BlockForOperationRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.BlockForOperationRequest
 */
export const BlockForOperationRequest = new BlockForOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockForOperationResponse$Type extends MessageType<BlockForOperationResponse> {
    constructor() {
        super("viam.robot.v1.BlockForOperationResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.BlockForOperationResponse
 */
export const BlockForOperationResponse = new BlockForOperationResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DiscoveryQuery$Type extends MessageType<DiscoveryQuery> {
    constructor() {
        super("viam.robot.v1.DiscoveryQuery", [
            { no: 1, name: "subtype", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "model", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.DiscoveryQuery
 */
export const DiscoveryQuery = new DiscoveryQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Discovery$Type extends MessageType<Discovery> {
    constructor() {
        super("viam.robot.v1.Discovery", [
            { no: 1, name: "query", kind: "message", T: () => DiscoveryQuery },
            { no: 2, name: "results", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.Discovery
 */
export const Discovery = new Discovery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DiscoverComponentsRequest$Type extends MessageType<DiscoverComponentsRequest> {
    constructor() {
        super("viam.robot.v1.DiscoverComponentsRequest", [
            { no: 1, name: "queries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DiscoveryQuery }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.DiscoverComponentsRequest
 */
export const DiscoverComponentsRequest = new DiscoverComponentsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DiscoverComponentsResponse$Type extends MessageType<DiscoverComponentsResponse> {
    constructor() {
        super("viam.robot.v1.DiscoverComponentsResponse", [
            { no: 1, name: "discovery", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Discovery }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.DiscoverComponentsResponse
 */
export const DiscoverComponentsResponse = new DiscoverComponentsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Status$Type extends MessageType<Status> {
    constructor() {
        super("viam.robot.v1.Status", [
            { no: 1, name: "name", kind: "message", T: () => ResourceName },
            { no: 2, name: "status", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.Status
 */
export const Status = new Status$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStatusRequest$Type extends MessageType<GetStatusRequest> {
    constructor() {
        super("viam.robot.v1.GetStatusRequest", [
            { no: 1, name: "resource_names", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceName }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.GetStatusRequest
 */
export const GetStatusRequest = new GetStatusRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStatusResponse$Type extends MessageType<GetStatusResponse> {
    constructor() {
        super("viam.robot.v1.GetStatusResponse", [
            { no: 1, name: "status", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Status }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.GetStatusResponse
 */
export const GetStatusResponse = new GetStatusResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StreamStatusRequest$Type extends MessageType<StreamStatusRequest> {
    constructor() {
        super("viam.robot.v1.StreamStatusRequest", [
            { no: 1, name: "resource_names", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceName },
            { no: 2, name: "every", kind: "message", T: () => Duration }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.StreamStatusRequest
 */
export const StreamStatusRequest = new StreamStatusRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StreamStatusResponse$Type extends MessageType<StreamStatusResponse> {
    constructor() {
        super("viam.robot.v1.StreamStatusResponse", [
            { no: 1, name: "status", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Status }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.StreamStatusResponse
 */
export const StreamStatusResponse = new StreamStatusResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StopExtraParameters$Type extends MessageType<StopExtraParameters> {
    constructor() {
        super("viam.robot.v1.StopExtraParameters", [
            { no: 1, name: "name", kind: "message", T: () => ResourceName },
            { no: 2, name: "params", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.StopExtraParameters
 */
export const StopExtraParameters = new StopExtraParameters$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StopAllRequest$Type extends MessageType<StopAllRequest> {
    constructor() {
        super("viam.robot.v1.StopAllRequest", [
            { no: 99, name: "extra", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => StopExtraParameters }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.StopAllRequest
 */
export const StopAllRequest = new StopAllRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StopAllResponse$Type extends MessageType<StopAllResponse> {
    constructor() {
        super("viam.robot.v1.StopAllResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.robot.v1.StopAllResponse
 */
export const StopAllResponse = new StopAllResponse$Type();
/**
 * @generated ServiceType for protobuf service viam.robot.v1.RobotService
 */
export const RobotService = new ServiceType("viam.robot.v1.RobotService", [
    { name: "GetOperations", options: { "google.api.http": { get: "/viam/api/v1/operations/list" } }, I: GetOperationsRequest, O: GetOperationsResponse },
    { name: "ResourceNames", options: { "google.api.http": { get: "/viam/api/v1/resources/list" } }, I: ResourceNamesRequest, O: ResourceNamesResponse },
    { name: "ResourceRPCSubtypes", options: { "google.api.http": { get: "/viam/api/v1/resource_rpc_subtypes/list" } }, I: ResourceRPCSubtypesRequest, O: ResourceRPCSubtypesResponse },
    { name: "CancelOperation", options: { "google.api.http": { post: "/viam/api/v1/operations/cancel" } }, I: CancelOperationRequest, O: CancelOperationResponse },
    { name: "BlockForOperation", options: { "google.api.http": { post: "/viam/api/v1/operations/block" } }, I: BlockForOperationRequest, O: BlockForOperationResponse },
    { name: "DiscoverComponents", options: { "google.api.http": { get: "/viam/api/v1/discovery/components" } }, I: DiscoverComponentsRequest, O: DiscoverComponentsResponse },
    { name: "FrameSystemConfig", options: { "google.api.http": { get: "/viam/api/v1/frame_system/config" } }, I: FrameSystemConfigRequest, O: FrameSystemConfigResponse },
    { name: "TransformPose", options: { "google.api.http": { get: "/viam/api/v1/frame_system/transform_pose" } }, I: TransformPoseRequest, O: TransformPoseResponse },
    { name: "GetStatus", options: { "google.api.http": { get: "/viam/api/v1/status" } }, I: GetStatusRequest, O: GetStatusResponse },
    { name: "StreamStatus", serverStreaming: true, options: { "google.api.http": { get: "/viam/api/v1/status/stream" } }, I: StreamStatusRequest, O: StreamStatusResponse },
    { name: "StopAll", options: { "google.api.http": { get: "/viam/api/v1/stop_all" } }, I: StopAllRequest, O: StopAllResponse }
]);
