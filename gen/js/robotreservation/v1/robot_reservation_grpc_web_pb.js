/**
 * @fileoverview gRPC-Web generated client stub for robotreservation.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v0.0.0
// source: robotreservation/v1/robot_reservation.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.robotreservation = {};
proto.robotreservation.v1 = require('./robot_reservation_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.robotreservation.v1.RobotReservationServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.CreateRobotReservationRequest,
 *   !proto.robotreservation.v1.CreateRobotReservationResponse>}
 */
const methodDescriptor_RobotReservationService_CreateRobotReservation = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/CreateRobotReservation',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.CreateRobotReservationRequest,
  proto.robotreservation.v1.CreateRobotReservationResponse,
  /**
   * @param {!proto.robotreservation.v1.CreateRobotReservationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.CreateRobotReservationResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.CreateRobotReservationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.CreateRobotReservationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.CreateRobotReservationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.createRobotReservation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/CreateRobotReservation',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_CreateRobotReservation,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.CreateRobotReservationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.CreateRobotReservationResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.createRobotReservation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/CreateRobotReservation',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_CreateRobotReservation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.DeleteRobotReservationRequest,
 *   !proto.robotreservation.v1.DeleteRobotReservationResponse>}
 */
const methodDescriptor_RobotReservationService_DeleteRobotReservation = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/DeleteRobotReservation',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.DeleteRobotReservationRequest,
  proto.robotreservation.v1.DeleteRobotReservationResponse,
  /**
   * @param {!proto.robotreservation.v1.DeleteRobotReservationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.DeleteRobotReservationResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.DeleteRobotReservationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.DeleteRobotReservationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.DeleteRobotReservationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.deleteRobotReservation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/DeleteRobotReservation',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_DeleteRobotReservation,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.DeleteRobotReservationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.DeleteRobotReservationResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.deleteRobotReservation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/DeleteRobotReservation',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_DeleteRobotReservation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.ListRobotReservationsRequest,
 *   !proto.robotreservation.v1.ListRobotReservationsResponse>}
 */
const methodDescriptor_RobotReservationService_ListRobotReservations = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/ListRobotReservations',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.ListRobotReservationsRequest,
  proto.robotreservation.v1.ListRobotReservationsResponse,
  /**
   * @param {!proto.robotreservation.v1.ListRobotReservationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.ListRobotReservationsResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.ListRobotReservationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.ListRobotReservationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.ListRobotReservationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.listRobotReservations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/ListRobotReservations',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_ListRobotReservations,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.ListRobotReservationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.ListRobotReservationsResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.listRobotReservations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/ListRobotReservations',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_ListRobotReservations);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.GetRobotReservationRequest,
 *   !proto.robotreservation.v1.GetRobotReservationResponse>}
 */
const methodDescriptor_RobotReservationService_GetRobotReservation = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/GetRobotReservation',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.GetRobotReservationRequest,
  proto.robotreservation.v1.GetRobotReservationResponse,
  /**
   * @param {!proto.robotreservation.v1.GetRobotReservationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.GetRobotReservationResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.GetRobotReservationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.GetRobotReservationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.GetRobotReservationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.getRobotReservation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/GetRobotReservation',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_GetRobotReservation,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.GetRobotReservationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.GetRobotReservationResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.getRobotReservation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/GetRobotReservation',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_GetRobotReservation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.CreateRobotProcessorRequest,
 *   !proto.robotreservation.v1.CreateRobotProcessorResponse>}
 */
const methodDescriptor_RobotReservationService_CreateRobotProcessor = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/CreateRobotProcessor',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.CreateRobotProcessorRequest,
  proto.robotreservation.v1.CreateRobotProcessorResponse,
  /**
   * @param {!proto.robotreservation.v1.CreateRobotProcessorRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.CreateRobotProcessorResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.CreateRobotProcessorRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.CreateRobotProcessorResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.CreateRobotProcessorResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.createRobotProcessor =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/CreateRobotProcessor',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_CreateRobotProcessor,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.CreateRobotProcessorRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.CreateRobotProcessorResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.createRobotProcessor =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/CreateRobotProcessor',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_CreateRobotProcessor);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.DeleteRobotProcessorRequest,
 *   !proto.robotreservation.v1.DeleteRobotProcessorResponse>}
 */
const methodDescriptor_RobotReservationService_DeleteRobotProcessor = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/DeleteRobotProcessor',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.DeleteRobotProcessorRequest,
  proto.robotreservation.v1.DeleteRobotProcessorResponse,
  /**
   * @param {!proto.robotreservation.v1.DeleteRobotProcessorRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.DeleteRobotProcessorResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.DeleteRobotProcessorRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.DeleteRobotProcessorResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.DeleteRobotProcessorResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.deleteRobotProcessor =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/DeleteRobotProcessor',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_DeleteRobotProcessor,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.DeleteRobotProcessorRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.DeleteRobotProcessorResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.deleteRobotProcessor =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/DeleteRobotProcessor',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_DeleteRobotProcessor);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.ListRobotProcessorsRequest,
 *   !proto.robotreservation.v1.ListRobotProcessorsResponse>}
 */
const methodDescriptor_RobotReservationService_ListRobotProcessors = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/ListRobotProcessors',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.ListRobotProcessorsRequest,
  proto.robotreservation.v1.ListRobotProcessorsResponse,
  /**
   * @param {!proto.robotreservation.v1.ListRobotProcessorsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.ListRobotProcessorsResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.ListRobotProcessorsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.ListRobotProcessorsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.ListRobotProcessorsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.listRobotProcessors =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/ListRobotProcessors',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_ListRobotProcessors,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.ListRobotProcessorsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.ListRobotProcessorsResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.listRobotProcessors =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/ListRobotProcessors',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_ListRobotProcessors);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.TryProcessRequest,
 *   !proto.robotreservation.v1.TryProcessResponse>}
 */
const methodDescriptor_RobotReservationService_TryProcess = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/TryProcess',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.TryProcessRequest,
  proto.robotreservation.v1.TryProcessResponse,
  /**
   * @param {!proto.robotreservation.v1.TryProcessRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.TryProcessResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.TryProcessRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.TryProcessResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.TryProcessResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.tryProcess =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/TryProcess',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_TryProcess,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.TryProcessRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.TryProcessResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.tryProcess =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/TryProcess',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_TryProcess);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.robotreservation.v1.UpdateProcessStateRequest,
 *   !proto.robotreservation.v1.UpdateProcessStateResponse>}
 */
const methodDescriptor_RobotReservationService_UpdateProcessState = new grpc.web.MethodDescriptor(
  '/robotreservation.v1.RobotReservationService/UpdateProcessState',
  grpc.web.MethodType.UNARY,
  proto.robotreservation.v1.UpdateProcessStateRequest,
  proto.robotreservation.v1.UpdateProcessStateResponse,
  /**
   * @param {!proto.robotreservation.v1.UpdateProcessStateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.robotreservation.v1.UpdateProcessStateResponse.deserializeBinary
);


/**
 * @param {!proto.robotreservation.v1.UpdateProcessStateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.robotreservation.v1.UpdateProcessStateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.robotreservation.v1.UpdateProcessStateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.robotreservation.v1.RobotReservationServiceClient.prototype.updateProcessState =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/UpdateProcessState',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_UpdateProcessState,
      callback);
};


/**
 * @param {!proto.robotreservation.v1.UpdateProcessStateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.robotreservation.v1.UpdateProcessStateResponse>}
 *     Promise that resolves to the response
 */
proto.robotreservation.v1.RobotReservationServicePromiseClient.prototype.updateProcessState =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/robotreservation.v1.RobotReservationService/UpdateProcessState',
      request,
      metadata || {},
      methodDescriptor_RobotReservationService_UpdateProcessState);
};


module.exports = proto.robotreservation.v1;

