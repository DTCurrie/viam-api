// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "app/v1/robot.proto" (package "viam.app.v1", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "app/v1/robot.proto" (package "viam.app.v1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { LogEntry } from "./app_pb";
import { Duration } from "../../google/protobuf/duration_pb";
import { Struct } from "../../google/protobuf/struct_pb";
/**
 * @generated from protobuf enum viam.app.v1.CredentialsType
 */
export var CredentialsType;
(function (CredentialsType) {
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_UNSPECIFIED = 0;
     */
    CredentialsType[CredentialsType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_INTERNAL = 1;
     */
    CredentialsType[CredentialsType["INTERNAL"] = 1] = "INTERNAL";
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_API_KEY = 2;
     */
    CredentialsType[CredentialsType["API_KEY"] = 2] = "API_KEY";
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_ROBOT_SECRET = 3;
     */
    CredentialsType[CredentialsType["ROBOT_SECRET"] = 3] = "ROBOT_SECRET";
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_ROBOT_LOCATION_SECRET = 4;
     */
    CredentialsType[CredentialsType["ROBOT_LOCATION_SECRET"] = 4] = "ROBOT_LOCATION_SECRET";
})(CredentialsType || (CredentialsType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class RobotConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.RobotConfig", [
            { no: 1, name: "cloud", kind: "message", T: () => CloudConfig },
            { no: 2, name: "remotes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RemoteConfig },
            { no: 3, name: "components", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ComponentConfig },
            { no: 4, name: "processes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ProcessConfig },
            { no: 5, name: "services", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ServiceConfig },
            { no: 6, name: "network", kind: "message", T: () => NetworkConfig },
            { no: 7, name: "auth", kind: "message", T: () => AuthConfig },
            { no: 8, name: "debug", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.RobotConfig
 */
export const RobotConfig = new RobotConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CloudConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.CloudConfig", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "fqdn", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "local_fqdn", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "managed_by", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "signaling_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "signaling_insecure", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "location_secret", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "secret", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.CloudConfig
 */
export const CloudConfig = new CloudConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComponentConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.ComponentConfig", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "namespace", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "model", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "frame", kind: "message", T: () => Frame },
            { no: 6, name: "depends_on", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "service_configs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceLevelServiceConfig, options: { "tagger.v1.tags": "json:\"service_config\"" } },
            { no: 8, name: "attributes", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ComponentConfig
 */
export const ComponentConfig = new ComponentConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceLevelServiceConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.ResourceLevelServiceConfig", [
            { no: 1, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "attributes", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ResourceLevelServiceConfig
 */
export const ResourceLevelServiceConfig = new ResourceLevelServiceConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProcessConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.ProcessConfig", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "args", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cwd", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "one_shot", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "log", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ProcessConfig
 */
export const ProcessConfig = new ProcessConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServiceConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.ServiceConfig", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "namespace", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "attributes", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ServiceConfig
 */
export const ServiceConfig = new ServiceConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NetworkConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.NetworkConfig", [
            { no: 1, name: "fqdn", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "bind_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "tls_cert_file", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "tls_key_file", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.NetworkConfig
 */
export const NetworkConfig = new NetworkConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.AuthConfig", [
            { no: 1, name: "handlers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AuthHandlerConfig },
            { no: 2, name: "tls_auth_entities", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.AuthConfig
 */
export const AuthConfig = new AuthConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthHandlerConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.AuthHandlerConfig", [
            { no: 1, name: "type", kind: "enum", T: () => ["viam.app.v1.CredentialsType", CredentialsType, "CREDENTIALS_TYPE_"] },
            { no: 5, name: "config", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.AuthHandlerConfig
 */
export const AuthHandlerConfig = new AuthHandlerConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Frame$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Frame", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "translation", kind: "message", T: () => Translation },
            { no: 3, name: "orientation", kind: "message", T: () => Orientation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Frame
 */
export const Frame = new Frame$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Translation$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Translation", [
            { no: 1, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Translation
 */
export const Translation = new Translation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Orientation", [
            { no: 1, name: "no_orientation", kind: "message", oneof: "type", T: () => Orientation_NoOrientation },
            { no: 2, name: "vector_radians", kind: "message", oneof: "type", T: () => Orientation_OrientationVectorRadians },
            { no: 3, name: "vector_degrees", kind: "message", oneof: "type", T: () => Orientation_OrientationVectorDegrees },
            { no: 4, name: "euler_angles", kind: "message", oneof: "type", T: () => Orientation_EulerAngles },
            { no: 5, name: "axis_angles", kind: "message", oneof: "type", T: () => Orientation_AxisAngles },
            { no: 6, name: "quaternion", kind: "message", oneof: "type", T: () => Orientation_Quaternion }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation
 */
export const Orientation = new Orientation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_NoOrientation$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Orientation.NoOrientation", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.NoOrientation
 */
export const Orientation_NoOrientation = new Orientation_NoOrientation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_OrientationVectorRadians$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Orientation.OrientationVectorRadians", [
            { no: 1, name: "theta", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "tagger.v1.tags": "json:\"th\"" } },
            { no: 2, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.OrientationVectorRadians
 */
export const Orientation_OrientationVectorRadians = new Orientation_OrientationVectorRadians$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_OrientationVectorDegrees$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Orientation.OrientationVectorDegrees", [
            { no: 1, name: "theta", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "tagger.v1.tags": "json:\"th\"" } },
            { no: 2, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.OrientationVectorDegrees
 */
export const Orientation_OrientationVectorDegrees = new Orientation_OrientationVectorDegrees$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_EulerAngles$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Orientation.EulerAngles", [
            { no: 1, name: "roll", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "pitch", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "yaw", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.EulerAngles
 */
export const Orientation_EulerAngles = new Orientation_EulerAngles$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_AxisAngles$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Orientation.AxisAngles", [
            { no: 1, name: "theta", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "tagger.v1.tags": "json:\"th\"" } },
            { no: 2, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.AxisAngles
 */
export const Orientation_AxisAngles = new Orientation_AxisAngles$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_Quaternion$Type extends MessageType {
    constructor() {
        super("viam.app.v1.Orientation.Quaternion", [
            { no: 1, name: "w", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.Quaternion
 */
export const Orientation_Quaternion = new Orientation_Quaternion$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoteConfig$Type extends MessageType {
    constructor() {
        super("viam.app.v1.RemoteConfig", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "frame", kind: "message", T: () => Frame },
            { no: 4, name: "auth", kind: "message", T: () => RemoteAuth },
            { no: 5, name: "managed_by", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "insecure", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "connection_check_interval", kind: "message", T: () => Duration },
            { no: 8, name: "reconnect_interval", kind: "message", T: () => Duration },
            { no: 9, name: "service_configs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceLevelServiceConfig, options: { "tagger.v1.tags": "json:\"service_config\"" } },
            { no: 10, name: "secret", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.RemoteConfig
 */
export const RemoteConfig = new RemoteConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoteAuth$Type extends MessageType {
    constructor() {
        super("viam.app.v1.RemoteAuth", [
            { no: 1, name: "credentials", kind: "message", T: () => RemoteAuth_Credentials },
            { no: 2, name: "entity", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.RemoteAuth
 */
export const RemoteAuth = new RemoteAuth$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoteAuth_Credentials$Type extends MessageType {
    constructor() {
        super("viam.app.v1.RemoteAuth.Credentials", [
            { no: 1, name: "type", kind: "enum", T: () => ["viam.app.v1.CredentialsType", CredentialsType, "CREDENTIALS_TYPE_"] },
            { no: 2, name: "payload", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.RemoteAuth.Credentials
 */
export const RemoteAuth_Credentials = new RemoteAuth_Credentials$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AgentInfo$Type extends MessageType {
    constructor() {
        super("viam.app.v1.AgentInfo", [
            { no: 1, name: "host", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "os", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "git_revision", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.AgentInfo
 */
export const AgentInfo = new AgentInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfigRequest$Type extends MessageType {
    constructor() {
        super("viam.app.v1.ConfigRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "agent_info", kind: "message", T: () => AgentInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ConfigRequest
 */
export const ConfigRequest = new ConfigRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfigResponse$Type extends MessageType {
    constructor() {
        super("viam.app.v1.ConfigResponse", [
            { no: 1, name: "config", kind: "message", T: () => RobotConfig }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ConfigResponse
 */
export const ConfigResponse = new ConfigResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CertificateRequest$Type extends MessageType {
    constructor() {
        super("viam.app.v1.CertificateRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.CertificateRequest
 */
export const CertificateRequest = new CertificateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CertificateResponse$Type extends MessageType {
    constructor() {
        super("viam.app.v1.CertificateResponse", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "tls_certificate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "tls_private_key", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.CertificateResponse
 */
export const CertificateResponse = new CertificateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogRequest$Type extends MessageType {
    constructor() {
        super("viam.app.v1.LogRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "logs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LogEntry }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.LogRequest
 */
export const LogRequest = new LogRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogResponse$Type extends MessageType {
    constructor() {
        super("viam.app.v1.LogResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.LogResponse
 */
export const LogResponse = new LogResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NeedsRestartRequest$Type extends MessageType {
    constructor() {
        super("viam.app.v1.NeedsRestartRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.NeedsRestartRequest
 */
export const NeedsRestartRequest = new NeedsRestartRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NeedsRestartResponse$Type extends MessageType {
    constructor() {
        super("viam.app.v1.NeedsRestartResponse", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "must_restart", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "restart_check_interval", kind: "message", T: () => Duration }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.NeedsRestartResponse
 */
export const NeedsRestartResponse = new NeedsRestartResponse$Type();
/**
 * @generated ServiceType for protobuf service viam.app.v1.RobotService
 */
export const RobotService = new ServiceType("viam.app.v1.RobotService", [
    { name: "Config", options: {}, I: ConfigRequest, O: ConfigResponse },
    { name: "Certificate", options: {}, I: CertificateRequest, O: CertificateResponse },
    { name: "Log", options: {}, I: LogRequest, O: LogResponse },
    { name: "NeedsRestart", options: {}, I: NeedsRestartRequest, O: NeedsRestartResponse }
]);
