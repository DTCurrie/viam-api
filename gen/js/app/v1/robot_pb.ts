// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,ts_nocheck
// @generated from protobuf file "app/v1/robot.proto" (package "viam.app.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { LogEntry } from "./app_pb";
import { Duration } from "../../google/protobuf/duration_pb";
import { Struct } from "../../google/protobuf/struct_pb";
/**
 * @generated from protobuf message viam.app.v1.RobotConfig
 */
export interface RobotConfig {
    /**
     * @generated from protobuf field: viam.app.v1.CloudConfig cloud = 1;
     */
    cloud?: CloudConfig;
    /**
     * @generated from protobuf field: repeated viam.app.v1.RemoteConfig remotes = 2;
     */
    remotes: RemoteConfig[];
    /**
     * @generated from protobuf field: repeated viam.app.v1.ComponentConfig components = 3;
     */
    components: ComponentConfig[];
    /**
     * @generated from protobuf field: repeated viam.app.v1.ProcessConfig processes = 4;
     */
    processes: ProcessConfig[];
    /**
     * @generated from protobuf field: repeated viam.app.v1.ServiceConfig services = 5;
     */
    services: ServiceConfig[];
    /**
     * @generated from protobuf field: optional viam.app.v1.NetworkConfig network = 6;
     */
    network?: NetworkConfig;
    /**
     * @generated from protobuf field: optional viam.app.v1.AuthConfig auth = 7;
     */
    auth?: AuthConfig;
    /**
     * Turns on debug mode for robot, adding an echo server and more logging and tracing. Only works after restart
     *
     * @generated from protobuf field: optional bool debug = 8;
     */
    debug?: boolean;
}
/**
 * @generated from protobuf message viam.app.v1.CloudConfig
 */
export interface CloudConfig {
    /**
     * Robot part id.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string fqdn = 2;
     */
    fqdn: string;
    /**
     * @generated from protobuf field: string local_fqdn = 3;
     */
    localFqdn: string;
    /**
     * @generated from protobuf field: string managed_by = 4;
     */
    managedBy: string;
    /**
     * @generated from protobuf field: string signaling_address = 5;
     */
    signalingAddress: string;
    /**
     * @generated from protobuf field: bool signaling_insecure = 6;
     */
    signalingInsecure: boolean;
    /**
     * @generated from protobuf field: string location_secret = 7;
     */
    locationSecret: string;
    /**
     * @generated from protobuf field: string secret = 8;
     */
    secret: string;
}
/**
 * @generated from protobuf message viam.app.v1.ComponentConfig
 */
export interface ComponentConfig {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string namespace = 2;
     */
    namespace: string;
    /**
     * @generated from protobuf field: string type = 3;
     */
    type: string;
    /**
     * @generated from protobuf field: string model = 4;
     */
    model: string;
    /**
     * @generated from protobuf field: viam.app.v1.Frame frame = 5;
     */
    frame?: Frame;
    /**
     * @generated from protobuf field: repeated string depends_on = 6;
     */
    dependsOn: string[];
    /**
     * @generated from protobuf field: repeated viam.app.v1.ResourceLevelServiceConfig service_configs = 7;
     */
    serviceConfigs: ResourceLevelServiceConfig[];
    /**
     * @generated from protobuf field: google.protobuf.Struct attributes = 8;
     */
    attributes?: Struct;
}
/**
 * A ResourceLevelServiceConfig describes component or remote configuration for a service.
 *
 * @generated from protobuf message viam.app.v1.ResourceLevelServiceConfig
 */
export interface ResourceLevelServiceConfig {
    /**
     * @generated from protobuf field: string type = 1;
     */
    type: string;
    /**
     * TODO(adam): Should this be move to a structured type as defined in the typescript frontend.
     *
     * @generated from protobuf field: google.protobuf.Struct attributes = 2;
     */
    attributes?: Struct;
}
/**
 * A ProcessConfig describes how to manage a system process.
 *
 * @generated from protobuf message viam.app.v1.ProcessConfig
 */
export interface ProcessConfig {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: repeated string args = 3;
     */
    args: string[];
    /**
     * @generated from protobuf field: string cwd = 4;
     */
    cwd: string;
    /**
     * @generated from protobuf field: bool one_shot = 5;
     */
    oneShot: boolean;
    /**
     * @generated from protobuf field: bool log = 6;
     */
    log: boolean;
}
/**
 * @generated from protobuf message viam.app.v1.ServiceConfig
 */
export interface ServiceConfig {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string namespace = 2;
     */
    namespace: string;
    /**
     * @generated from protobuf field: string type = 3;
     */
    type: string;
    /**
     * @generated from protobuf field: google.protobuf.Struct attributes = 4;
     */
    attributes?: Struct;
}
/**
 * @generated from protobuf message viam.app.v1.NetworkConfig
 */
export interface NetworkConfig {
    /**
     * @generated from protobuf field: string fqdn = 1;
     */
    fqdn: string;
    /**
     * @generated from protobuf field: string bind_address = 2;
     */
    bindAddress: string;
    /**
     * @generated from protobuf field: string tls_cert_file = 3;
     */
    tlsCertFile: string;
    /**
     * @generated from protobuf field: string tls_key_file = 4;
     */
    tlsKeyFile: string;
}
/**
 * @generated from protobuf message viam.app.v1.AuthConfig
 */
export interface AuthConfig {
    /**
     * @generated from protobuf field: repeated viam.app.v1.AuthHandlerConfig handlers = 1;
     */
    handlers: AuthHandlerConfig[];
    /**
     * @generated from protobuf field: repeated string tls_auth_entities = 2;
     */
    tlsAuthEntities: string[];
}
/**
 * @generated from protobuf message viam.app.v1.AuthHandlerConfig
 */
export interface AuthHandlerConfig {
    /**
     * @generated from protobuf field: viam.app.v1.CredentialsType type = 1;
     */
    type: CredentialsType;
    /**
     * @generated from protobuf field: google.protobuf.Struct config = 5;
     */
    config?: Struct;
}
/**
 * @generated from protobuf message viam.app.v1.Frame
 */
export interface Frame {
    /**
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * @generated from protobuf field: viam.app.v1.Translation translation = 2;
     */
    translation?: Translation;
    /**
     * @generated from protobuf field: viam.app.v1.Orientation orientation = 3;
     */
    orientation?: Orientation;
}
/**
 * @generated from protobuf message viam.app.v1.Translation
 */
export interface Translation {
    /**
     * @generated from protobuf field: double x = 1;
     */
    x: number;
    /**
     * @generated from protobuf field: double y = 2;
     */
    y: number;
    /**
     * @generated from protobuf field: double z = 3;
     */
    z: number;
}
/**
 * @generated from protobuf message viam.app.v1.Orientation
 */
export interface Orientation {
    /**
     * @generated from protobuf oneof: type
     */
    type: {
        oneofKind: "noOrientation";
        /**
         * @generated from protobuf field: viam.app.v1.Orientation.NoOrientation no_orientation = 1;
         */
        noOrientation: Orientation_NoOrientation;
    } | {
        oneofKind: "vectorRadians";
        /**
         * @generated from protobuf field: viam.app.v1.Orientation.OrientationVectorRadians vector_radians = 2;
         */
        vectorRadians: Orientation_OrientationVectorRadians;
    } | {
        oneofKind: "vectorDegrees";
        /**
         * @generated from protobuf field: viam.app.v1.Orientation.OrientationVectorDegrees vector_degrees = 3;
         */
        vectorDegrees: Orientation_OrientationVectorDegrees;
    } | {
        oneofKind: "eulerAngles";
        /**
         * @generated from protobuf field: viam.app.v1.Orientation.EulerAngles euler_angles = 4;
         */
        eulerAngles: Orientation_EulerAngles;
    } | {
        oneofKind: "axisAngles";
        /**
         * @generated from protobuf field: viam.app.v1.Orientation.AxisAngles axis_angles = 5;
         */
        axisAngles: Orientation_AxisAngles;
    } | {
        oneofKind: "quaternion";
        /**
         * @generated from protobuf field: viam.app.v1.Orientation.Quaternion quaternion = 6;
         */
        quaternion: Orientation_Quaternion;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message viam.app.v1.Orientation.NoOrientation
 */
export interface Orientation_NoOrientation {
}
/**
 * OrientationVector containing ox, oy, oz, theta represents an orientation vector
 * Structured similarly to an angle axis, an orientation vector works differently. Rather than representing an orientation
 * with an arbitrary axis and a rotation around it from an origin, an orientation vector represents orientation
 * such that the ox/oy/oz components represent the point on the cartesian unit sphere at which your end effector is pointing
 * from the origin, and that unit vector forms an axis around which theta rotates. This means that incrementing/decrementing
 * theta will perform an in-line rotation of the end effector.
 * Theta is defined as rotation between two planes: the plane defined by the origin, the point (0,0,1), and the rx,ry,rz
 * point, and the plane defined by the origin, the rx,ry,rz point, and the new local Z axis. So if theta is kept at
 * zero as the north/south pole is circled, the Roll will correct itself to remain in-line.
 *
 * @generated from protobuf message viam.app.v1.Orientation.OrientationVectorRadians
 */
export interface Orientation_OrientationVectorRadians {
    /**
     * @generated from protobuf field: double theta = 1;
     */
    theta: number;
    /**
     * @generated from protobuf field: double x = 2;
     */
    x: number;
    /**
     * @generated from protobuf field: double y = 3;
     */
    y: number;
    /**
     * @generated from protobuf field: double z = 4;
     */
    z: number;
}
/**
 * OrientationVectorDegrees is the orientation vector between two objects, but expressed in degrees rather than radians.
 * Because protobuf Pose is in degrees, this is necessary.
 *
 * @generated from protobuf message viam.app.v1.Orientation.OrientationVectorDegrees
 */
export interface Orientation_OrientationVectorDegrees {
    /**
     * @generated from protobuf field: double theta = 1;
     */
    theta: number;
    /**
     * @generated from protobuf field: double x = 2;
     */
    x: number;
    /**
     * @generated from protobuf field: double y = 3;
     */
    y: number;
    /**
     * @generated from protobuf field: double z = 4;
     */
    z: number;
}
/**
 * EulerAngles are three angles (in radians) used to represent the rotation of an object in 3D Euclidean space
 * The Tait–Bryan angle formalism is used, with rotations around three distinct axes in the z-y′-x″ sequence.
 *
 * @generated from protobuf message viam.app.v1.Orientation.EulerAngles
 */
export interface Orientation_EulerAngles {
    /**
     * @generated from protobuf field: double roll = 1;
     */
    roll: number;
    /**
     * @generated from protobuf field: double pitch = 2;
     */
    pitch: number;
    /**
     * @generated from protobuf field: double yaw = 3;
     */
    yaw: number;
}
/**
 * See here for a thorough explanation: https://en.wikipedia.org/wiki/Axis%E2%80%93angle_representation
 * Basic explanation: Imagine a 3d cartesian grid centered at 0,0,0, and a sphere of radius 1 centered at
 * that same point. An orientation can be expressed by first specifying an axis, i.e. a line from the origin
 * to a point on that sphere, represented by (rx, ry, rz), and a rotation around that axis, theta.
 * These four numbers can be used as-is (R4), or they can be converted to R3, where theta is multiplied by each of
 * the unit sphere components to give a vector whose length is theta and whose direction is the original axis.
 * AxisAngles represents an R4 axis angle.
 *
 * @generated from protobuf message viam.app.v1.Orientation.AxisAngles
 */
export interface Orientation_AxisAngles {
    /**
     * @generated from protobuf field: double theta = 1;
     */
    theta: number;
    /**
     * @generated from protobuf field: double x = 2;
     */
    x: number;
    /**
     * @generated from protobuf field: double y = 3;
     */
    y: number;
    /**
     * @generated from protobuf field: double z = 4;
     */
    z: number;
}
/**
 * Quaternion is a float64 precision quaternion.
 *
 * @generated from protobuf message viam.app.v1.Orientation.Quaternion
 */
export interface Orientation_Quaternion {
    /**
     * @generated from protobuf field: double w = 1;
     */
    w: number;
    /**
     * @generated from protobuf field: double x = 2;
     */
    x: number;
    /**
     * @generated from protobuf field: double y = 3;
     */
    y: number;
    /**
     * @generated from protobuf field: double z = 4;
     */
    z: number;
}
/**
 * A RemoteConfig describes a remote robot that should be integrated.
 * The Frame field defines how the "world" node of the remote robot should be reconciled with the "world" node of the
 * the current robot. All components of the remote robot who have Parent as "world" will be attached to the parent defined
 * in Frame, and with the given offset as well.
 *
 * @generated from protobuf message viam.app.v1.RemoteConfig
 */
export interface RemoteConfig {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string address = 2;
     */
    address: string;
    /**
     * @generated from protobuf field: viam.app.v1.Frame frame = 3;
     */
    frame?: Frame;
    /**
     * @generated from protobuf field: viam.app.v1.RemoteAuth auth = 4;
     */
    auth?: RemoteAuth;
    /**
     * @generated from protobuf field: string managed_by = 5;
     */
    managedBy: string;
    /**
     * @generated from protobuf field: bool insecure = 6;
     */
    insecure: boolean;
    /**
     * @generated from protobuf field: google.protobuf.Duration connection_check_interval = 7;
     */
    connectionCheckInterval?: Duration;
    /**
     * @generated from protobuf field: google.protobuf.Duration reconnect_interval = 8;
     */
    reconnectInterval?: Duration;
    /**
     * @generated from protobuf field: repeated viam.app.v1.ResourceLevelServiceConfig service_configs = 9;
     */
    serviceConfigs: ResourceLevelServiceConfig[];
    /**
     * Secret is a helper for a robot location secret.
     *
     * @generated from protobuf field: string secret = 10;
     */
    secret: string;
}
/**
 * RemoteAuth specifies how to authenticate against a remote. If no credentials are
 * specified, authentication does not happen. If an entity is specified, the
 * authentication request will specify it.
 *
 * @generated from protobuf message viam.app.v1.RemoteAuth
 */
export interface RemoteAuth {
    /**
     * @generated from protobuf field: viam.app.v1.RemoteAuth.Credentials credentials = 1;
     */
    credentials?: RemoteAuth_Credentials;
    /**
     * @generated from protobuf field: string entity = 2;
     */
    entity: string;
}
/**
 * Credentials packages up both a type of credential along with its payload which
 * is formatted specific to the type.
 *
 * @generated from protobuf message viam.app.v1.RemoteAuth.Credentials
 */
export interface RemoteAuth_Credentials {
    /**
     * @generated from protobuf field: viam.app.v1.CredentialsType type = 1;
     */
    type: CredentialsType;
    /**
     * @generated from protobuf field: string payload = 2;
     */
    payload: string;
}
/**
 * @generated from protobuf message viam.app.v1.AgentInfo
 */
export interface AgentInfo {
    /**
     * @generated from protobuf field: string host = 1;
     */
    host: string;
    /**
     * @generated from protobuf field: string os = 2;
     */
    os: string;
    /**
     * list of all ipv4 ips.
     *
     * @generated from protobuf field: repeated string ips = 3;
     */
    ips: string[];
    /**
     * RDK version
     *
     * @generated from protobuf field: string version = 4;
     */
    version: string;
    /**
     * @generated from protobuf field: string git_revision = 5;
     */
    gitRevision: string;
}
/**
 * @generated from protobuf message viam.app.v1.ConfigRequest
 */
export interface ConfigRequest {
    /**
     * Robot part id.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * Details about the RDK (os, version) are updated during this request.
     *
     * @generated from protobuf field: optional viam.app.v1.AgentInfo agent_info = 2;
     */
    agentInfo?: AgentInfo;
}
/**
 * @generated from protobuf message viam.app.v1.ConfigResponse
 */
export interface ConfigResponse {
    /**
     * @generated from protobuf field: viam.app.v1.RobotConfig config = 1;
     */
    config?: RobotConfig;
}
/**
 * @generated from protobuf message viam.app.v1.CertificateRequest
 */
export interface CertificateRequest {
    /**
     * Robot part id.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message viam.app.v1.CertificateResponse
 */
export interface CertificateResponse {
    /**
     * Robot part id.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string tls_certificate = 2;
     */
    tlsCertificate: string;
    /**
     * @generated from protobuf field: string tls_private_key = 3;
     */
    tlsPrivateKey: string;
}
/**
 * @generated from protobuf message viam.app.v1.LogRequest
 */
export interface LogRequest {
    /**
     * Robot part id.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: repeated viam.app.v1.LogEntry logs = 2;
     */
    logs: LogEntry[];
}
/**
 * @generated from protobuf message viam.app.v1.LogResponse
 */
export interface LogResponse {
}
/**
 * @generated from protobuf message viam.app.v1.NeedsRestartRequest
 */
export interface NeedsRestartRequest {
    /**
     * Robot part id.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message viam.app.v1.NeedsRestartResponse
 */
export interface NeedsRestartResponse {
    /**
     * Robot part id.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: bool must_restart = 2;
     */
    mustRestart: boolean;
    /**
     * @generated from protobuf field: google.protobuf.Duration restart_check_interval = 3;
     */
    restartCheckInterval?: Duration;
}
/**
 * @generated from protobuf enum viam.app.v1.CredentialsType
 */
export enum CredentialsType {
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_INTERNAL = 1;
     */
    INTERNAL = 1,
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_API_KEY = 2;
     */
    API_KEY = 2,
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_ROBOT_SECRET = 3;
     */
    ROBOT_SECRET = 3,
    /**
     * @generated from protobuf enum value: CREDENTIALS_TYPE_ROBOT_LOCATION_SECRET = 4;
     */
    ROBOT_LOCATION_SECRET = 4
}
// @generated message type with reflection information, may provide speed optimized methods
class RobotConfig$Type extends MessageType<RobotConfig> {
    constructor() {
        super("viam.app.v1.RobotConfig", [
            { no: 1, name: "cloud", kind: "message", T: () => CloudConfig },
            { no: 2, name: "remotes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RemoteConfig },
            { no: 3, name: "components", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ComponentConfig },
            { no: 4, name: "processes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ProcessConfig },
            { no: 5, name: "services", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ServiceConfig },
            { no: 6, name: "network", kind: "message", T: () => NetworkConfig },
            { no: 7, name: "auth", kind: "message", T: () => AuthConfig },
            { no: 8, name: "debug", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.RobotConfig
 */
export const RobotConfig = new RobotConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CloudConfig$Type extends MessageType<CloudConfig> {
    constructor() {
        super("viam.app.v1.CloudConfig", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "fqdn", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "local_fqdn", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "managed_by", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "signaling_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "signaling_insecure", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "location_secret", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "secret", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.CloudConfig
 */
export const CloudConfig = new CloudConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComponentConfig$Type extends MessageType<ComponentConfig> {
    constructor() {
        super("viam.app.v1.ComponentConfig", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "namespace", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "model", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "frame", kind: "message", T: () => Frame },
            { no: 6, name: "depends_on", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "service_configs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceLevelServiceConfig, options: { "tagger.v1.tags": "json:\"service_config\"" } },
            { no: 8, name: "attributes", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ComponentConfig
 */
export const ComponentConfig = new ComponentConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceLevelServiceConfig$Type extends MessageType<ResourceLevelServiceConfig> {
    constructor() {
        super("viam.app.v1.ResourceLevelServiceConfig", [
            { no: 1, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "attributes", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ResourceLevelServiceConfig
 */
export const ResourceLevelServiceConfig = new ResourceLevelServiceConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProcessConfig$Type extends MessageType<ProcessConfig> {
    constructor() {
        super("viam.app.v1.ProcessConfig", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "args", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cwd", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "one_shot", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "log", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ProcessConfig
 */
export const ProcessConfig = new ProcessConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServiceConfig$Type extends MessageType<ServiceConfig> {
    constructor() {
        super("viam.app.v1.ServiceConfig", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "namespace", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "attributes", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ServiceConfig
 */
export const ServiceConfig = new ServiceConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NetworkConfig$Type extends MessageType<NetworkConfig> {
    constructor() {
        super("viam.app.v1.NetworkConfig", [
            { no: 1, name: "fqdn", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "bind_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "tls_cert_file", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "tls_key_file", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.NetworkConfig
 */
export const NetworkConfig = new NetworkConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthConfig$Type extends MessageType<AuthConfig> {
    constructor() {
        super("viam.app.v1.AuthConfig", [
            { no: 1, name: "handlers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AuthHandlerConfig },
            { no: 2, name: "tls_auth_entities", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.AuthConfig
 */
export const AuthConfig = new AuthConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthHandlerConfig$Type extends MessageType<AuthHandlerConfig> {
    constructor() {
        super("viam.app.v1.AuthHandlerConfig", [
            { no: 1, name: "type", kind: "enum", T: () => ["viam.app.v1.CredentialsType", CredentialsType, "CREDENTIALS_TYPE_"] },
            { no: 5, name: "config", kind: "message", T: () => Struct }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.AuthHandlerConfig
 */
export const AuthHandlerConfig = new AuthHandlerConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Frame$Type extends MessageType<Frame> {
    constructor() {
        super("viam.app.v1.Frame", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "translation", kind: "message", T: () => Translation },
            { no: 3, name: "orientation", kind: "message", T: () => Orientation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Frame
 */
export const Frame = new Frame$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Translation$Type extends MessageType<Translation> {
    constructor() {
        super("viam.app.v1.Translation", [
            { no: 1, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Translation
 */
export const Translation = new Translation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation$Type extends MessageType<Orientation> {
    constructor() {
        super("viam.app.v1.Orientation", [
            { no: 1, name: "no_orientation", kind: "message", oneof: "type", T: () => Orientation_NoOrientation },
            { no: 2, name: "vector_radians", kind: "message", oneof: "type", T: () => Orientation_OrientationVectorRadians },
            { no: 3, name: "vector_degrees", kind: "message", oneof: "type", T: () => Orientation_OrientationVectorDegrees },
            { no: 4, name: "euler_angles", kind: "message", oneof: "type", T: () => Orientation_EulerAngles },
            { no: 5, name: "axis_angles", kind: "message", oneof: "type", T: () => Orientation_AxisAngles },
            { no: 6, name: "quaternion", kind: "message", oneof: "type", T: () => Orientation_Quaternion }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation
 */
export const Orientation = new Orientation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_NoOrientation$Type extends MessageType<Orientation_NoOrientation> {
    constructor() {
        super("viam.app.v1.Orientation.NoOrientation", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.NoOrientation
 */
export const Orientation_NoOrientation = new Orientation_NoOrientation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_OrientationVectorRadians$Type extends MessageType<Orientation_OrientationVectorRadians> {
    constructor() {
        super("viam.app.v1.Orientation.OrientationVectorRadians", [
            { no: 1, name: "theta", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "tagger.v1.tags": "json:\"th\"" } },
            { no: 2, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.OrientationVectorRadians
 */
export const Orientation_OrientationVectorRadians = new Orientation_OrientationVectorRadians$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_OrientationVectorDegrees$Type extends MessageType<Orientation_OrientationVectorDegrees> {
    constructor() {
        super("viam.app.v1.Orientation.OrientationVectorDegrees", [
            { no: 1, name: "theta", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "tagger.v1.tags": "json:\"th\"" } },
            { no: 2, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.OrientationVectorDegrees
 */
export const Orientation_OrientationVectorDegrees = new Orientation_OrientationVectorDegrees$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_EulerAngles$Type extends MessageType<Orientation_EulerAngles> {
    constructor() {
        super("viam.app.v1.Orientation.EulerAngles", [
            { no: 1, name: "roll", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "pitch", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "yaw", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.EulerAngles
 */
export const Orientation_EulerAngles = new Orientation_EulerAngles$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_AxisAngles$Type extends MessageType<Orientation_AxisAngles> {
    constructor() {
        super("viam.app.v1.Orientation.AxisAngles", [
            { no: 1, name: "theta", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "tagger.v1.tags": "json:\"th\"" } },
            { no: 2, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.AxisAngles
 */
export const Orientation_AxisAngles = new Orientation_AxisAngles$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Orientation_Quaternion$Type extends MessageType<Orientation_Quaternion> {
    constructor() {
        super("viam.app.v1.Orientation.Quaternion", [
            { no: 1, name: "w", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "x", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "y", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "z", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.Orientation.Quaternion
 */
export const Orientation_Quaternion = new Orientation_Quaternion$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoteConfig$Type extends MessageType<RemoteConfig> {
    constructor() {
        super("viam.app.v1.RemoteConfig", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "frame", kind: "message", T: () => Frame },
            { no: 4, name: "auth", kind: "message", T: () => RemoteAuth },
            { no: 5, name: "managed_by", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "insecure", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "connection_check_interval", kind: "message", T: () => Duration },
            { no: 8, name: "reconnect_interval", kind: "message", T: () => Duration },
            { no: 9, name: "service_configs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResourceLevelServiceConfig, options: { "tagger.v1.tags": "json:\"service_config\"" } },
            { no: 10, name: "secret", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.RemoteConfig
 */
export const RemoteConfig = new RemoteConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoteAuth$Type extends MessageType<RemoteAuth> {
    constructor() {
        super("viam.app.v1.RemoteAuth", [
            { no: 1, name: "credentials", kind: "message", T: () => RemoteAuth_Credentials },
            { no: 2, name: "entity", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.RemoteAuth
 */
export const RemoteAuth = new RemoteAuth$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoteAuth_Credentials$Type extends MessageType<RemoteAuth_Credentials> {
    constructor() {
        super("viam.app.v1.RemoteAuth.Credentials", [
            { no: 1, name: "type", kind: "enum", T: () => ["viam.app.v1.CredentialsType", CredentialsType, "CREDENTIALS_TYPE_"] },
            { no: 2, name: "payload", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.RemoteAuth.Credentials
 */
export const RemoteAuth_Credentials = new RemoteAuth_Credentials$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AgentInfo$Type extends MessageType<AgentInfo> {
    constructor() {
        super("viam.app.v1.AgentInfo", [
            { no: 1, name: "host", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "os", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "git_revision", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.AgentInfo
 */
export const AgentInfo = new AgentInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfigRequest$Type extends MessageType<ConfigRequest> {
    constructor() {
        super("viam.app.v1.ConfigRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "agent_info", kind: "message", T: () => AgentInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ConfigRequest
 */
export const ConfigRequest = new ConfigRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfigResponse$Type extends MessageType<ConfigResponse> {
    constructor() {
        super("viam.app.v1.ConfigResponse", [
            { no: 1, name: "config", kind: "message", T: () => RobotConfig }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.ConfigResponse
 */
export const ConfigResponse = new ConfigResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CertificateRequest$Type extends MessageType<CertificateRequest> {
    constructor() {
        super("viam.app.v1.CertificateRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.CertificateRequest
 */
export const CertificateRequest = new CertificateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CertificateResponse$Type extends MessageType<CertificateResponse> {
    constructor() {
        super("viam.app.v1.CertificateResponse", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "tls_certificate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "tls_private_key", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.CertificateResponse
 */
export const CertificateResponse = new CertificateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogRequest$Type extends MessageType<LogRequest> {
    constructor() {
        super("viam.app.v1.LogRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "logs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LogEntry }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.LogRequest
 */
export const LogRequest = new LogRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogResponse$Type extends MessageType<LogResponse> {
    constructor() {
        super("viam.app.v1.LogResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.LogResponse
 */
export const LogResponse = new LogResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NeedsRestartRequest$Type extends MessageType<NeedsRestartRequest> {
    constructor() {
        super("viam.app.v1.NeedsRestartRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.NeedsRestartRequest
 */
export const NeedsRestartRequest = new NeedsRestartRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NeedsRestartResponse$Type extends MessageType<NeedsRestartResponse> {
    constructor() {
        super("viam.app.v1.NeedsRestartResponse", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "must_restart", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "restart_check_interval", kind: "message", T: () => Duration }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.v1.NeedsRestartResponse
 */
export const NeedsRestartResponse = new NeedsRestartResponse$Type();
/**
 * @generated ServiceType for protobuf service viam.app.v1.RobotService
 */
export const RobotService = new ServiceType("viam.app.v1.RobotService", [
    { name: "Config", options: {}, I: ConfigRequest, O: ConfigResponse },
    { name: "Certificate", options: {}, I: CertificateRequest, O: CertificateResponse },
    { name: "Log", options: {}, I: LogRequest, O: LogResponse },
    { name: "NeedsRestart", options: {}, I: NeedsRestartRequest, O: NeedsRestartResponse }
]);
