// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "app/model/v1/model.proto" (package "viam.app.model.v1", syntax proto3)
// tslint:disable
import { ModelService } from "./model_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service viam.app.model.v1.ModelService
 */
export class ModelServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = ModelService.typeName;
        this.methods = ModelService.methods;
        this.options = ModelService.options;
    }
    /**
     * @generated from protobuf rpc: Upload(stream viam.app.model.v1.UploadRequest) returns (viam.app.model.v1.UploadResponse);
     */
    upload(options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("clientStreaming", this._transport, method, opt);
    }
    /**
     * @generated from protobuf rpc: Delete(viam.app.model.v1.DeleteRequest) returns (viam.app.model.v1.DeleteResponse);
     */
    delete(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Deploy(viam.app.model.v1.DeployRequest) returns (viam.app.model.v1.DeployResponse);
     */
    deploy(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
