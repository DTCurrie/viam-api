// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,ts_nocheck
// @generated from protobuf file "app/datasync/v1/data_sync.proto" (package "viam.app.datasync.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any_pb";
import { Struct } from "../../../google/protobuf/struct_pb";
import { Timestamp } from "../../../google/protobuf/timestamp_pb";
/**
 * @generated from protobuf message viam.app.datasync.v1.SensorMetadata
 */
export interface SensorMetadata {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp time_requested = 1;
     */
    timeRequested?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp time_received = 2;
     */
    timeReceived?: Timestamp;
}
/**
 * @generated from protobuf message viam.app.datasync.v1.SensorData
 */
export interface SensorData {
    /**
     * @generated from protobuf field: viam.app.datasync.v1.SensorMetadata metadata = 1;
     */
    metadata?: SensorMetadata;
    /**
     * @generated from protobuf oneof: data
     */
    data: {
        oneofKind: "struct";
        /**
         * @generated from protobuf field: google.protobuf.Struct struct = 2;
         */
        struct: Struct;
    } | {
        oneofKind: "binary";
        /**
         * @generated from protobuf field: bytes binary = 3;
         */
        binary: Uint8Array;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message viam.app.datasync.v1.FileData
 */
export interface FileData {
    /**
     * @generated from protobuf field: bytes data = 1;
     */
    data: Uint8Array;
}
/**
 * @generated from protobuf message viam.app.datasync.v1.UploadMetadata
 */
export interface UploadMetadata {
    /**
     * @generated from protobuf field: string part_id = 1;
     */
    partId: string;
    /**
     * @generated from protobuf field: string component_type = 2;
     */
    componentType: string;
    /**
     * @generated from protobuf field: string component_name = 3;
     */
    componentName: string;
    /**
     * @generated from protobuf field: string component_model = 4;
     */
    componentModel: string;
    /**
     * @generated from protobuf field: string method_name = 5;
     */
    methodName: string;
    /**
     * @generated from protobuf field: viam.app.datasync.v1.DataType type = 6;
     */
    type: DataType;
    /**
     * @generated from protobuf field: string file_name = 7;
     */
    fileName: string;
    /**
     * @generated from protobuf field: map<string, google.protobuf.Any> method_parameters = 8;
     */
    methodParameters: {
        [key: string]: Any;
    };
    /**
     * @generated from protobuf field: string file_extension = 9;
     */
    fileExtension: string;
    /**
     * @generated from protobuf field: repeated string tags = 10;
     */
    tags: string[];
    /**
     * @generated from protobuf field: string session_id = 11;
     */
    sessionId: string;
}
/**
 * @generated from protobuf message viam.app.datasync.v1.UploadRequest
 */
export interface UploadRequest {
    /**
     * @generated from protobuf oneof: upload_packet
     */
    uploadPacket: {
        oneofKind: "metadata";
        /**
         * @generated from protobuf field: viam.app.datasync.v1.UploadMetadata metadata = 1;
         */
        metadata: UploadMetadata;
    } | {
        oneofKind: "sensorContents";
        /**
         * @generated from protobuf field: viam.app.datasync.v1.SensorData sensor_contents = 2;
         */
        sensorContents: SensorData;
    } | {
        oneofKind: "fileContents";
        /**
         * @generated from protobuf field: viam.app.datasync.v1.FileData file_contents = 3;
         */
        fileContents: FileData;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message viam.app.datasync.v1.UploadResponse
 */
export interface UploadResponse {
    /**
     * @generated from protobuf field: int32 requests_written = 1;
     */
    requestsWritten: number;
}
/**
 * @generated from protobuf message viam.app.datasync.v1.CaptureInterval
 */
export interface CaptureInterval {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp start = 1;
     */
    start?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp end = 2;
     */
    end?: Timestamp;
}
/**
 * @generated from protobuf message viam.app.datasync.v1.DataCaptureMetadata
 */
export interface DataCaptureMetadata {
    /**
     * @generated from protobuf field: string component_type = 1;
     */
    componentType: string;
    /**
     * @generated from protobuf field: string component_name = 2;
     */
    componentName: string;
    /**
     * @generated from protobuf field: string component_model = 3;
     */
    componentModel: string;
    /**
     * @generated from protobuf field: string method_name = 4;
     */
    methodName: string;
    /**
     * @generated from protobuf field: viam.app.datasync.v1.DataType type = 5;
     */
    type: DataType;
    /**
     * @generated from protobuf field: map<string, google.protobuf.Any> method_parameters = 6;
     */
    methodParameters: {
        [key: string]: Any;
    };
    /**
     * @generated from protobuf field: string file_extension = 7;
     */
    fileExtension: string;
    /**
     * @generated from protobuf field: repeated string tags = 8;
     */
    tags: string[];
    /**
     * @generated from protobuf field: string session_id = 9;
     */
    sessionId: string;
}
/**
 * @generated from protobuf message viam.app.datasync.v1.TabularCapture
 */
export interface TabularCapture {
    /**
     * @generated from protobuf field: viam.app.datasync.v1.CaptureInterval interval = 1;
     */
    interval?: CaptureInterval;
    /**
     * @generated from protobuf field: string org_id = 2;
     */
    orgId: string;
    /**
     * @generated from protobuf field: string robot_id = 3;
     */
    robotId: string;
    /**
     * @generated from protobuf field: string part_id = 4;
     */
    partId: string;
    /**
     * @generated from protobuf field: string location_id = 5;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string component_name = 6;
     */
    componentName: string;
    /**
     * @generated from protobuf field: string component_type = 7;
     */
    componentType: string;
    /**
     * @generated from protobuf field: string component_model = 8;
     */
    componentModel: string;
    /**
     * @generated from protobuf field: string method_name = 9;
     */
    methodName: string;
    /**
     * @generated from protobuf field: string blob_path = 10;
     */
    blobPath: string;
    /**
     * @generated from protobuf field: repeated string column_names = 11;
     */
    columnNames: string[];
    /**
     * @generated from protobuf field: map<string, google.protobuf.Any> method_parameters = 12;
     */
    methodParameters: {
        [key: string]: Any;
    };
    /**
     * @generated from protobuf field: string file_id = 13;
     */
    fileId: string;
    /**
     * @generated from protobuf field: repeated string tags = 14;
     */
    tags: string[];
    /**
     * @generated from protobuf field: int32 message_count = 15;
     */
    messageCount: number;
    /**
     * @generated from protobuf field: int64 file_size_bytes = 16;
     */
    fileSizeBytes: string;
    /**
     * @generated from protobuf field: string session_id = 17;
     */
    sessionId: string;
    /**
     * @generated from protobuf field: string mime_type = 18;
     */
    mimeType: string;
}
/**
 * @generated from protobuf message viam.app.datasync.v1.BinaryCapture
 */
export interface BinaryCapture {
    /**
     * @generated from protobuf field: viam.app.datasync.v1.CaptureInterval interval = 1;
     */
    interval?: CaptureInterval;
    /**
     * @generated from protobuf field: string org_id = 2;
     */
    orgId: string;
    /**
     * @generated from protobuf field: string robot_id = 3;
     */
    robotId: string;
    /**
     * @generated from protobuf field: string part_id = 4;
     */
    partId: string;
    /**
     * @generated from protobuf field: string location_id = 5;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string component_name = 6;
     */
    componentName: string;
    /**
     * @generated from protobuf field: string component_type = 7;
     */
    componentType: string;
    /**
     * @generated from protobuf field: string component_model = 8;
     */
    componentModel: string;
    /**
     * @generated from protobuf field: string method_name = 9;
     */
    methodName: string;
    /**
     * @generated from protobuf field: string blob_path = 10;
     */
    blobPath: string;
    /**
     * @generated from protobuf field: map<string, google.protobuf.Any> method_parameters = 11;
     */
    methodParameters: {
        [key: string]: Any;
    };
    /**
     * @generated from protobuf field: string file_id = 12;
     */
    fileId: string;
    /**
     * @generated from protobuf field: repeated string tags = 13;
     */
    tags: string[];
    /**
     * @generated from protobuf field: int64 file_size_bytes = 14;
     */
    fileSizeBytes: string;
    /**
     * @generated from protobuf field: string session_id = 15;
     */
    sessionId: string;
    /**
     * @generated from protobuf field: string mime_type = 16;
     */
    mimeType: string;
    /**
     * @generated from protobuf field: string file_name = 17;
     */
    fileName: string;
}
/**
 * @generated from protobuf enum viam.app.datasync.v1.DataType
 */
export enum DataType {
    /**
     * @generated from protobuf enum value: DATA_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: DATA_TYPE_BINARY_SENSOR = 1;
     */
    BINARY_SENSOR = 1,
    /**
     * @generated from protobuf enum value: DATA_TYPE_TABULAR_SENSOR = 2;
     */
    TABULAR_SENSOR = 2,
    /**
     * @generated from protobuf enum value: DATA_TYPE_FILE = 3;
     */
    FILE = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class SensorMetadata$Type extends MessageType<SensorMetadata> {
    constructor() {
        super("viam.app.datasync.v1.SensorMetadata", [
            { no: 1, name: "time_requested", kind: "message", T: () => Timestamp },
            { no: 2, name: "time_received", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.SensorMetadata
 */
export const SensorMetadata = new SensorMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SensorData$Type extends MessageType<SensorData> {
    constructor() {
        super("viam.app.datasync.v1.SensorData", [
            { no: 1, name: "metadata", kind: "message", T: () => SensorMetadata },
            { no: 2, name: "struct", kind: "message", oneof: "data", T: () => Struct },
            { no: 3, name: "binary", kind: "scalar", oneof: "data", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.SensorData
 */
export const SensorData = new SensorData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileData$Type extends MessageType<FileData> {
    constructor() {
        super("viam.app.datasync.v1.FileData", [
            { no: 1, name: "data", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.FileData
 */
export const FileData = new FileData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadMetadata$Type extends MessageType<UploadMetadata> {
    constructor() {
        super("viam.app.datasync.v1.UploadMetadata", [
            { no: 1, name: "part_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "component_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "component_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "component_model", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "method_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "type", kind: "enum", T: () => ["viam.app.datasync.v1.DataType", DataType, "DATA_TYPE_"] },
            { no: 7, name: "file_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "method_parameters", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => Any } },
            { no: 9, name: "file_extension", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "tags", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.UploadMetadata
 */
export const UploadMetadata = new UploadMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadRequest$Type extends MessageType<UploadRequest> {
    constructor() {
        super("viam.app.datasync.v1.UploadRequest", [
            { no: 1, name: "metadata", kind: "message", oneof: "uploadPacket", T: () => UploadMetadata },
            { no: 2, name: "sensor_contents", kind: "message", oneof: "uploadPacket", T: () => SensorData },
            { no: 3, name: "file_contents", kind: "message", oneof: "uploadPacket", T: () => FileData }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.UploadRequest
 */
export const UploadRequest = new UploadRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UploadResponse$Type extends MessageType<UploadResponse> {
    constructor() {
        super("viam.app.datasync.v1.UploadResponse", [
            { no: 1, name: "requests_written", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.UploadResponse
 */
export const UploadResponse = new UploadResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CaptureInterval$Type extends MessageType<CaptureInterval> {
    constructor() {
        super("viam.app.datasync.v1.CaptureInterval", [
            { no: 1, name: "start", kind: "message", T: () => Timestamp },
            { no: 2, name: "end", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.CaptureInterval
 */
export const CaptureInterval = new CaptureInterval$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DataCaptureMetadata$Type extends MessageType<DataCaptureMetadata> {
    constructor() {
        super("viam.app.datasync.v1.DataCaptureMetadata", [
            { no: 1, name: "component_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "component_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "component_model", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "method_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "type", kind: "enum", T: () => ["viam.app.datasync.v1.DataType", DataType, "DATA_TYPE_"] },
            { no: 6, name: "method_parameters", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => Any } },
            { no: 7, name: "file_extension", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "tags", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.DataCaptureMetadata
 */
export const DataCaptureMetadata = new DataCaptureMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TabularCapture$Type extends MessageType<TabularCapture> {
    constructor() {
        super("viam.app.datasync.v1.TabularCapture", [
            { no: 1, name: "interval", kind: "message", T: () => CaptureInterval, options: { "tagger.v1.tags": "bson:\"interval\" json:\"interval\"" } },
            { no: 2, name: "org_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"org_id\" json:\"org_id\"" } },
            { no: 3, name: "robot_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"robot_id\" json:\"robot_id\"" } },
            { no: 4, name: "part_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"part_id\" json:\"part_id\"" } },
            { no: 5, name: "location_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"location_id\" json:\"location_id\"" } },
            { no: 6, name: "component_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"component_name\" json:\"component_name\"" } },
            { no: 7, name: "component_type", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"component_type\" json:\"component_type\"" } },
            { no: 8, name: "component_model", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"component_model\" json:\"component_model\"" } },
            { no: 9, name: "method_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"method_name\" json:\"method_name\"" } },
            { no: 10, name: "blob_path", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"blob_path\" json:\"blob_path\"" } },
            { no: 11, name: "column_names", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"column_names\" json:\"column_names\"" } },
            { no: 12, name: "method_parameters", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => Any }, options: { "tagger.v1.tags": "bson:\"method_parameters\" json:\"method_parameters\"" } },
            { no: 13, name: "file_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"file_id\" json:\"file_id\"" } },
            { no: 14, name: "tags", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"tags\" json:\"tags\"" } },
            { no: 15, name: "message_count", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "tagger.v1.tags": "bson:\"message_count\" json:\"message_count\"" } },
            { no: 16, name: "file_size_bytes", kind: "scalar", T: 3 /*ScalarType.INT64*/, options: { "tagger.v1.tags": "bson:\"file_size_bytes\" json:\"file_size_bytes\"" } },
            { no: 17, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"session_id\" json:\"session_id\"" } },
            { no: 18, name: "mime_type", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"mime_type\" json:\"mime_type\"" } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.TabularCapture
 */
export const TabularCapture = new TabularCapture$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BinaryCapture$Type extends MessageType<BinaryCapture> {
    constructor() {
        super("viam.app.datasync.v1.BinaryCapture", [
            { no: 1, name: "interval", kind: "message", T: () => CaptureInterval, options: { "tagger.v1.tags": "bson:\"interval\" json:\"interval\"" } },
            { no: 2, name: "org_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"org_id\" json:\"org_id\"" } },
            { no: 3, name: "robot_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"robot_id\" json:\"robot_id\"" } },
            { no: 4, name: "part_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"part_id\" json:\"part_id\"" } },
            { no: 5, name: "location_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"location_id\" json:\"location_id\"" } },
            { no: 6, name: "component_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"component_name\" json:\"component_name\"" } },
            { no: 7, name: "component_type", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"component_type\" json:\"component_type\"" } },
            { no: 8, name: "component_model", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"component_model\" json:\"component_model\"" } },
            { no: 9, name: "method_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"method_name\" json:\"method_name\"" } },
            { no: 10, name: "blob_path", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"blob_path\" json:\"blob_path\"" } },
            { no: 11, name: "method_parameters", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => Any }, options: { "tagger.v1.tags": "bson:\"method_parameters\" json:\"method_parameters\"" } },
            { no: 12, name: "file_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"file_id\" json:\"file_id\"" } },
            { no: 13, name: "tags", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"tags\" json:\"tags\"" } },
            { no: 14, name: "file_size_bytes", kind: "scalar", T: 3 /*ScalarType.INT64*/, options: { "tagger.v1.tags": "bson:\"file_size_bytes\" json:\"file_size_bytes\"" } },
            { no: 15, name: "session_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"session_id\" json:\"session_id\"" } },
            { no: 16, name: "mime_type", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"mime_type\" json:\"mime_type\"" } },
            { no: 17, name: "file_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "tagger.v1.tags": "bson:\"file_name\" json:\"file_name\"" } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.app.datasync.v1.BinaryCapture
 */
export const BinaryCapture = new BinaryCapture$Type();
/**
 * @generated ServiceType for protobuf service viam.app.datasync.v1.DataSyncService
 */
export const DataSyncService = new ServiceType("viam.app.datasync.v1.DataSyncService", [
    { name: "Upload", serverStreaming: true, clientStreaming: true, options: {}, I: UploadRequest, O: UploadResponse }
]);
