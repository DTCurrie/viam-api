// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "service/navigation/v1/navigation.proto" (package "viam.service.navigation.v1", syntax proto3)
// tslint:disable
import { NavigationService } from "./navigation_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * A NavigationService declares the gRPC contract for a Navigation service
 *
 * @generated from protobuf service viam.service.navigation.v1.NavigationService
 */
export class NavigationServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = NavigationService.typeName;
        this.methods = NavigationService.methods;
        this.options = NavigationService.options;
    }
    /**
     * @generated from protobuf rpc: GetMode(viam.service.navigation.v1.GetModeRequest) returns (viam.service.navigation.v1.GetModeResponse);
     */
    getMode(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetMode(viam.service.navigation.v1.SetModeRequest) returns (viam.service.navigation.v1.SetModeResponse);
     */
    setMode(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetLocation(viam.service.navigation.v1.GetLocationRequest) returns (viam.service.navigation.v1.GetLocationResponse);
     */
    getLocation(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetWaypoints(viam.service.navigation.v1.GetWaypointsRequest) returns (viam.service.navigation.v1.GetWaypointsResponse);
     */
    getWaypoints(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddWaypoint(viam.service.navigation.v1.AddWaypointRequest) returns (viam.service.navigation.v1.AddWaypointResponse);
     */
    addWaypoint(input, options) {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveWaypoint(viam.service.navigation.v1.RemoveWaypointRequest) returns (viam.service.navigation.v1.RemoveWaypointResponse);
     */
    removeWaypoint(input, options) {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
