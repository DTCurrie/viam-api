// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "service/vision/v1/vision.proto" (package "viam.service.vision.v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { PointCloudObject } from "../../../common/v1/common_pb";
import { Struct } from "../../../google/protobuf/struct_pb";
/**
 * @generated from protobuf message viam.service.vision.v1.GetModelParameterSchemaRequest
 */
export interface GetModelParameterSchemaRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * name of the type of vision model
     *
     * @generated from protobuf field: string model_type = 2;
     */
    modelType: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetModelParameterSchemaResponse
 */
export interface GetModelParameterSchemaResponse {
    /**
     * the parameters as JSON bytes of a jsonschema.Schema
     *
     * @generated from protobuf field: bytes model_parameter_schema = 1;
     */
    modelParameterSchema: Uint8Array;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetDetectorNamesRequest
 */
export interface GetDetectorNamesRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetDetectorNamesResponse
 */
export interface GetDetectorNamesResponse {
    /**
     * detectors in the registry
     *
     * @generated from protobuf field: repeated string detector_names = 1;
     */
    detectorNames: string[];
}
/**
 * @generated from protobuf message viam.service.vision.v1.AddDetectorRequest
 */
export interface AddDetectorRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string detector_name = 2;
     */
    detectorName: string;
    /**
     * @generated from protobuf field: string detector_model_type = 3;
     */
    detectorModelType: string;
    /**
     * @generated from protobuf field: google.protobuf.Struct detector_parameters = 4;
     */
    detectorParameters?: Struct;
}
/**
 * @generated from protobuf message viam.service.vision.v1.AddDetectorResponse
 */
export interface AddDetectorResponse {
}
/**
 * @generated from protobuf message viam.service.vision.v1.RemoveDetectorRequest
 */
export interface RemoveDetectorRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * name of detector in registry
     *
     * @generated from protobuf field: string detector_name = 2;
     */
    detectorName: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.RemoveDetectorResponse
 */
export interface RemoveDetectorResponse {
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetDetectionsRequest
 */
export interface GetDetectionsRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * the image, encoded as bytes
     *
     * @generated from protobuf field: bytes image = 2;
     */
    image: Uint8Array;
    /**
     * the width of the image
     *
     * @generated from protobuf field: int64 width = 3;
     */
    width: string;
    /**
     * the height of the image
     *
     * @generated from protobuf field: int64 height = 4;
     */
    height: string;
    /**
     * the actual MIME type of image
     *
     * @generated from protobuf field: string mime_type = 5;
     */
    mimeType: string;
    /**
     * name of the registered detector to use
     *
     * @generated from protobuf field: string detector_name = 6;
     */
    detectorName: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetDetectionsResponse
 */
export interface GetDetectionsResponse {
    /**
     * the bounding boxes and labels
     *
     * @generated from protobuf field: repeated viam.service.vision.v1.Detection detections = 1;
     */
    detections: Detection[];
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetDetectionsFromCameraRequest
 */
export interface GetDetectionsFromCameraRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * name of camera source to use as input
     *
     * @generated from protobuf field: string camera_name = 2;
     */
    cameraName: string;
    /**
     * name of the registered detector to use
     *
     * @generated from protobuf field: string detector_name = 3;
     */
    detectorName: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetDetectionsFromCameraResponse
 */
export interface GetDetectionsFromCameraResponse {
    /**
     * the bounding boxes and labels
     *
     * @generated from protobuf field: repeated viam.service.vision.v1.Detection detections = 1;
     */
    detections: Detection[];
}
/**
 * @generated from protobuf message viam.service.vision.v1.Detection
 */
export interface Detection {
    /**
     * the four corners of the box
     *
     * @generated from protobuf field: optional int64 x_min = 1;
     */
    xMin?: string;
    /**
     * @generated from protobuf field: optional int64 y_min = 2;
     */
    yMin?: string;
    /**
     * @generated from protobuf field: optional int64 x_max = 3;
     */
    xMax?: string;
    /**
     * @generated from protobuf field: optional int64 y_max = 4;
     */
    yMax?: string;
    /**
     * the confidence of the detection
     *
     * @generated from protobuf field: double confidence = 5;
     */
    confidence: number;
    /**
     * label associated with the detected object
     *
     * @generated from protobuf field: string class_name = 6;
     */
    className: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetClassifierNamesRequest
 */
export interface GetClassifierNamesRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetClassifierNamesResponse
 */
export interface GetClassifierNamesResponse {
    /**
     * @generated from protobuf field: repeated string classifier_names = 1;
     */
    classifierNames: string[];
}
/**
 * @generated from protobuf message viam.service.vision.v1.AddClassifierRequest
 */
export interface AddClassifierRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * name of classifier to add to registry
     *
     * @generated from protobuf field: string classifier_name = 2;
     */
    classifierName: string;
    /**
     * the type of classifier
     *
     * @generated from protobuf field: string classifier_model_type = 3;
     */
    classifierModelType: string;
    /**
     * additional parameters
     *
     * @generated from protobuf field: google.protobuf.Struct classifier_parameters = 4;
     */
    classifierParameters?: Struct;
}
/**
 * @generated from protobuf message viam.service.vision.v1.AddClassifierResponse
 */
export interface AddClassifierResponse {
}
/**
 * @generated from protobuf message viam.service.vision.v1.RemoveClassifierRequest
 */
export interface RemoveClassifierRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * name of the classifier in registry
     *
     * @generated from protobuf field: string classifier_name = 2;
     */
    classifierName: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.RemoveClassifierResponse
 */
export interface RemoveClassifierResponse {
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetClassificationsRequest
 */
export interface GetClassificationsRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * the image encoded as bytes
     *
     * @generated from protobuf field: bytes image = 2;
     */
    image: Uint8Array;
    /**
     * the width of the image
     *
     * @generated from protobuf field: int32 width = 3;
     */
    width: number;
    /**
     * the height of the image
     *
     * @generated from protobuf field: int32 height = 4;
     */
    height: number;
    /**
     * the actual MIME type of image
     *
     * @generated from protobuf field: string mime_type = 5;
     */
    mimeType: string;
    /**
     * the name of the registered classifier
     *
     * @generated from protobuf field: string classifier_name = 6;
     */
    classifierName: string;
    /**
     * the number of classifications desired
     *
     * @generated from protobuf field: int32 n = 7;
     */
    n: number;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetClassificationsResponse
 */
export interface GetClassificationsResponse {
    /**
     * @generated from protobuf field: repeated viam.service.vision.v1.Classification classifications = 1;
     */
    classifications: Classification[];
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetClassificationsFromCameraRequest
 */
export interface GetClassificationsFromCameraRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * the image encoded as bytes
     *
     * @generated from protobuf field: string camera_name = 2;
     */
    cameraName: string;
    /**
     * the name of the registered classifier
     *
     * @generated from protobuf field: string classifier_name = 3;
     */
    classifierName: string;
    /**
     * the number of classifications desired
     *
     * @generated from protobuf field: int32 n = 4;
     */
    n: number;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetClassificationsFromCameraResponse
 */
export interface GetClassificationsFromCameraResponse {
    /**
     * @generated from protobuf field: repeated viam.service.vision.v1.Classification classifications = 1;
     */
    classifications: Classification[];
}
/**
 * the general form of the output from a classifier
 *
 * @generated from protobuf message viam.service.vision.v1.Classification
 */
export interface Classification {
    /**
     * the class name
     *
     * @generated from protobuf field: string class_name = 1;
     */
    className: string;
    /**
     * the confidence score of the classification
     *
     * @generated from protobuf field: double confidence = 2;
     */
    confidence: number;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetSegmenterNamesRequest
 */
export interface GetSegmenterNamesRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetSegmenterNamesResponse
 */
export interface GetSegmenterNamesResponse {
    /**
     * segmenters in the registry
     *
     * @generated from protobuf field: repeated string segmenter_names = 1;
     */
    segmenterNames: string[];
}
/**
 * @generated from protobuf message viam.service.vision.v1.AddSegmenterRequest
 */
export interface AddSegmenterRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * name of the segmenter
     *
     * @generated from protobuf field: string segmenter_name = 2;
     */
    segmenterName: string;
    /**
     * name of the segmenter model
     *
     * @generated from protobuf field: string segmenter_model_type = 3;
     */
    segmenterModelType: string;
    /**
     * parameters of the segmenter model
     *
     * @generated from protobuf field: google.protobuf.Struct segmenter_parameters = 4;
     */
    segmenterParameters?: Struct;
}
/**
 * @generated from protobuf message viam.service.vision.v1.AddSegmenterResponse
 */
export interface AddSegmenterResponse {
}
/**
 * @generated from protobuf message viam.service.vision.v1.RemoveSegmenterRequest
 */
export interface RemoveSegmenterRequest {
    /**
     * name of the vision service
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * name of segmenter in registry
     *
     * @generated from protobuf field: string segmenter_name = 2;
     */
    segmenterName: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.RemoveSegmenterResponse
 */
export interface RemoveSegmenterResponse {
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetObjectPointCloudsRequest
 */
export interface GetObjectPointCloudsRequest {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Name of a camera
     *
     * @generated from protobuf field: string camera_name = 2;
     */
    cameraName: string;
    /**
     * Name of the segmentation algorithm
     *
     * @generated from protobuf field: string segmenter_name = 3;
     */
    segmenterName: string;
    /**
     * Requested MIME type of response
     *
     * @generated from protobuf field: string mime_type = 4;
     */
    mimeType: string;
}
/**
 * @generated from protobuf message viam.service.vision.v1.GetObjectPointCloudsResponse
 */
export interface GetObjectPointCloudsResponse {
    /**
     * Actual MIME type of response
     *
     * @generated from protobuf field: string mime_type = 1;
     */
    mimeType: string;
    /**
     * List of objects in the scene
     *
     * @generated from protobuf field: repeated viam.common.v1.PointCloudObject objects = 2;
     */
    objects: PointCloudObject[];
}
declare class GetModelParameterSchemaRequest$Type extends MessageType<GetModelParameterSchemaRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetModelParameterSchemaRequest
 */
export declare const GetModelParameterSchemaRequest: GetModelParameterSchemaRequest$Type;
declare class GetModelParameterSchemaResponse$Type extends MessageType<GetModelParameterSchemaResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetModelParameterSchemaResponse
 */
export declare const GetModelParameterSchemaResponse: GetModelParameterSchemaResponse$Type;
declare class GetDetectorNamesRequest$Type extends MessageType<GetDetectorNamesRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetDetectorNamesRequest
 */
export declare const GetDetectorNamesRequest: GetDetectorNamesRequest$Type;
declare class GetDetectorNamesResponse$Type extends MessageType<GetDetectorNamesResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetDetectorNamesResponse
 */
export declare const GetDetectorNamesResponse: GetDetectorNamesResponse$Type;
declare class AddDetectorRequest$Type extends MessageType<AddDetectorRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.AddDetectorRequest
 */
export declare const AddDetectorRequest: AddDetectorRequest$Type;
declare class AddDetectorResponse$Type extends MessageType<AddDetectorResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.AddDetectorResponse
 */
export declare const AddDetectorResponse: AddDetectorResponse$Type;
declare class RemoveDetectorRequest$Type extends MessageType<RemoveDetectorRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.RemoveDetectorRequest
 */
export declare const RemoveDetectorRequest: RemoveDetectorRequest$Type;
declare class RemoveDetectorResponse$Type extends MessageType<RemoveDetectorResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.RemoveDetectorResponse
 */
export declare const RemoveDetectorResponse: RemoveDetectorResponse$Type;
declare class GetDetectionsRequest$Type extends MessageType<GetDetectionsRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetDetectionsRequest
 */
export declare const GetDetectionsRequest: GetDetectionsRequest$Type;
declare class GetDetectionsResponse$Type extends MessageType<GetDetectionsResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetDetectionsResponse
 */
export declare const GetDetectionsResponse: GetDetectionsResponse$Type;
declare class GetDetectionsFromCameraRequest$Type extends MessageType<GetDetectionsFromCameraRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetDetectionsFromCameraRequest
 */
export declare const GetDetectionsFromCameraRequest: GetDetectionsFromCameraRequest$Type;
declare class GetDetectionsFromCameraResponse$Type extends MessageType<GetDetectionsFromCameraResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetDetectionsFromCameraResponse
 */
export declare const GetDetectionsFromCameraResponse: GetDetectionsFromCameraResponse$Type;
declare class Detection$Type extends MessageType<Detection> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.Detection
 */
export declare const Detection: Detection$Type;
declare class GetClassifierNamesRequest$Type extends MessageType<GetClassifierNamesRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetClassifierNamesRequest
 */
export declare const GetClassifierNamesRequest: GetClassifierNamesRequest$Type;
declare class GetClassifierNamesResponse$Type extends MessageType<GetClassifierNamesResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetClassifierNamesResponse
 */
export declare const GetClassifierNamesResponse: GetClassifierNamesResponse$Type;
declare class AddClassifierRequest$Type extends MessageType<AddClassifierRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.AddClassifierRequest
 */
export declare const AddClassifierRequest: AddClassifierRequest$Type;
declare class AddClassifierResponse$Type extends MessageType<AddClassifierResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.AddClassifierResponse
 */
export declare const AddClassifierResponse: AddClassifierResponse$Type;
declare class RemoveClassifierRequest$Type extends MessageType<RemoveClassifierRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.RemoveClassifierRequest
 */
export declare const RemoveClassifierRequest: RemoveClassifierRequest$Type;
declare class RemoveClassifierResponse$Type extends MessageType<RemoveClassifierResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.RemoveClassifierResponse
 */
export declare const RemoveClassifierResponse: RemoveClassifierResponse$Type;
declare class GetClassificationsRequest$Type extends MessageType<GetClassificationsRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetClassificationsRequest
 */
export declare const GetClassificationsRequest: GetClassificationsRequest$Type;
declare class GetClassificationsResponse$Type extends MessageType<GetClassificationsResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetClassificationsResponse
 */
export declare const GetClassificationsResponse: GetClassificationsResponse$Type;
declare class GetClassificationsFromCameraRequest$Type extends MessageType<GetClassificationsFromCameraRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetClassificationsFromCameraRequest
 */
export declare const GetClassificationsFromCameraRequest: GetClassificationsFromCameraRequest$Type;
declare class GetClassificationsFromCameraResponse$Type extends MessageType<GetClassificationsFromCameraResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetClassificationsFromCameraResponse
 */
export declare const GetClassificationsFromCameraResponse: GetClassificationsFromCameraResponse$Type;
declare class Classification$Type extends MessageType<Classification> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.Classification
 */
export declare const Classification: Classification$Type;
declare class GetSegmenterNamesRequest$Type extends MessageType<GetSegmenterNamesRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetSegmenterNamesRequest
 */
export declare const GetSegmenterNamesRequest: GetSegmenterNamesRequest$Type;
declare class GetSegmenterNamesResponse$Type extends MessageType<GetSegmenterNamesResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetSegmenterNamesResponse
 */
export declare const GetSegmenterNamesResponse: GetSegmenterNamesResponse$Type;
declare class AddSegmenterRequest$Type extends MessageType<AddSegmenterRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.AddSegmenterRequest
 */
export declare const AddSegmenterRequest: AddSegmenterRequest$Type;
declare class AddSegmenterResponse$Type extends MessageType<AddSegmenterResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.AddSegmenterResponse
 */
export declare const AddSegmenterResponse: AddSegmenterResponse$Type;
declare class RemoveSegmenterRequest$Type extends MessageType<RemoveSegmenterRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.RemoveSegmenterRequest
 */
export declare const RemoveSegmenterRequest: RemoveSegmenterRequest$Type;
declare class RemoveSegmenterResponse$Type extends MessageType<RemoveSegmenterResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.RemoveSegmenterResponse
 */
export declare const RemoveSegmenterResponse: RemoveSegmenterResponse$Type;
declare class GetObjectPointCloudsRequest$Type extends MessageType<GetObjectPointCloudsRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetObjectPointCloudsRequest
 */
export declare const GetObjectPointCloudsRequest: GetObjectPointCloudsRequest$Type;
declare class GetObjectPointCloudsResponse$Type extends MessageType<GetObjectPointCloudsResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.service.vision.v1.GetObjectPointCloudsResponse
 */
export declare const GetObjectPointCloudsResponse: GetObjectPointCloudsResponse$Type;
/**
 * @generated ServiceType for protobuf service viam.service.vision.v1.VisionService
 */
export declare const VisionService: any;
export {};
