// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "service/motion/v1/motion.proto" (package "viam.service.motion.v1", syntax proto3)
// tslint:disable
import { MotionService } from "./motion_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * A MotionService declares the gRPC contract for a motion service
 *
 * @generated from protobuf service viam.service.motion.v1.MotionService
 */
export class MotionServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = MotionService.typeName;
        this.methods = MotionService.methods;
        this.options = MotionService.options;
    }
    /**
     * @generated from protobuf rpc: Move(viam.service.motion.v1.MoveRequest) returns (viam.service.motion.v1.MoveResponse);
     */
    move(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: MoveSingleComponent(viam.service.motion.v1.MoveSingleComponentRequest) returns (viam.service.motion.v1.MoveSingleComponentResponse);
     */
    moveSingleComponent(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetPose(viam.service.motion.v1.GetPoseRequest) returns (viam.service.motion.v1.GetPoseResponse);
     */
    getPose(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
