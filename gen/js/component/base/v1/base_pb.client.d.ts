// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/base/v1/base.proto" (package "viam.component.base.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { StopResponse } from "./base_pb";
import type { StopRequest } from "./base_pb";
import type { SetVelocityResponse } from "./base_pb";
import type { SetVelocityRequest } from "./base_pb";
import type { SetPowerResponse } from "./base_pb";
import type { SetPowerRequest } from "./base_pb";
import type { SpinResponse } from "./base_pb";
import type { SpinRequest } from "./base_pb";
import type { MoveStraightResponse } from "./base_pb";
import type { MoveStraightRequest } from "./base_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service viam.component.base.v1.BaseService
 */
export interface IBaseServiceClient {
    /**
     * MoveStraight moves a robot's base in a straight line by a given distance, expressed in millimeters
     * and a given speed, expressed in millimeters per second
     * This method blocks until completed or cancelled
     *
     * @generated from protobuf rpc: MoveStraight(viam.component.base.v1.MoveStraightRequest) returns (viam.component.base.v1.MoveStraightResponse);
     */
    moveStraight(input: MoveStraightRequest, options?: RpcOptions): UnaryCall<MoveStraightRequest, MoveStraightResponse>;
    /**
     * Spin spins a robot's base by an given angle, expressed in degrees, and a given
     * angular speed, expressed in degrees per second
     * This method blocks until completed or cancelled
     *
     * @generated from protobuf rpc: Spin(viam.component.base.v1.SpinRequest) returns (viam.component.base.v1.SpinResponse);
     */
    spin(input: SpinRequest, options?: RpcOptions): UnaryCall<SpinRequest, SpinResponse>;
    /**
     * SetPower sets the linear and angular power of a base
     * -1 -> 1 in terms of power for each direction
     *
     * @generated from protobuf rpc: SetPower(viam.component.base.v1.SetPowerRequest) returns (viam.component.base.v1.SetPowerResponse);
     */
    setPower(input: SetPowerRequest, options?: RpcOptions): UnaryCall<SetPowerRequest, SetPowerResponse>;
    /**
     * SetVelocity sets the linear and angular velocity of a base
     *
     * @generated from protobuf rpc: SetVelocity(viam.component.base.v1.SetVelocityRequest) returns (viam.component.base.v1.SetVelocityResponse);
     */
    setVelocity(input: SetVelocityRequest, options?: RpcOptions): UnaryCall<SetVelocityRequest, SetVelocityResponse>;
    /**
     * Stop stops a robot's base
     *
     * @generated from protobuf rpc: Stop(viam.component.base.v1.StopRequest) returns (viam.component.base.v1.StopResponse);
     */
    stop(input: StopRequest, options?: RpcOptions): UnaryCall<StopRequest, StopResponse>;
}
/**
 * @generated from protobuf service viam.component.base.v1.BaseService
 */
export declare class BaseServiceClient implements IBaseServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * MoveStraight moves a robot's base in a straight line by a given distance, expressed in millimeters
     * and a given speed, expressed in millimeters per second
     * This method blocks until completed or cancelled
     *
     * @generated from protobuf rpc: MoveStraight(viam.component.base.v1.MoveStraightRequest) returns (viam.component.base.v1.MoveStraightResponse);
     */
    moveStraight(input: MoveStraightRequest, options?: RpcOptions): UnaryCall<MoveStraightRequest, MoveStraightResponse>;
    /**
     * Spin spins a robot's base by an given angle, expressed in degrees, and a given
     * angular speed, expressed in degrees per second
     * This method blocks until completed or cancelled
     *
     * @generated from protobuf rpc: Spin(viam.component.base.v1.SpinRequest) returns (viam.component.base.v1.SpinResponse);
     */
    spin(input: SpinRequest, options?: RpcOptions): UnaryCall<SpinRequest, SpinResponse>;
    /**
     * SetPower sets the linear and angular power of a base
     * -1 -> 1 in terms of power for each direction
     *
     * @generated from protobuf rpc: SetPower(viam.component.base.v1.SetPowerRequest) returns (viam.component.base.v1.SetPowerResponse);
     */
    setPower(input: SetPowerRequest, options?: RpcOptions): UnaryCall<SetPowerRequest, SetPowerResponse>;
    /**
     * SetVelocity sets the linear and angular velocity of a base
     *
     * @generated from protobuf rpc: SetVelocity(viam.component.base.v1.SetVelocityRequest) returns (viam.component.base.v1.SetVelocityResponse);
     */
    setVelocity(input: SetVelocityRequest, options?: RpcOptions): UnaryCall<SetVelocityRequest, SetVelocityResponse>;
    /**
     * Stop stops a robot's base
     *
     * @generated from protobuf rpc: Stop(viam.component.base.v1.StopRequest) returns (viam.component.base.v1.StopResponse);
     */
    stop(input: StopRequest, options?: RpcOptions): UnaryCall<StopRequest, StopResponse>;
}
