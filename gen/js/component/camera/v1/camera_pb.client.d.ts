// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/camera/v1/camera.proto" (package "viam.component.camera.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { GetPropertiesResponse } from "./camera_pb";
import type { GetPropertiesRequest } from "./camera_pb";
import type { GetPointCloudResponse } from "./camera_pb";
import type { GetPointCloudRequest } from "./camera_pb";
import type { HttpBody } from "../../../google/api/httpbody_pb";
import type { RenderFrameRequest } from "./camera_pb";
import type { GetImageResponse } from "./camera_pb";
import type { GetImageRequest } from "./camera_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * A CameraService services all cameras associated with a robot
 *
 * @generated from protobuf service viam.component.camera.v1.CameraService
 */
export interface ICameraServiceClient {
    /**
     * GetImage returns a frame from a camera of the underlying robot. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: GetImage(viam.component.camera.v1.GetImageRequest) returns (viam.component.camera.v1.GetImageResponse);
     */
    getImage(input: GetImageRequest, options?: RpcOptions): UnaryCall<GetImageRequest, GetImageResponse>;
    /**
     * RenderFrame renders a frame from a camera of the underlying robot to an HTTP response. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: RenderFrame(viam.component.camera.v1.RenderFrameRequest) returns (google.api.HttpBody);
     */
    renderFrame(input: RenderFrameRequest, options?: RpcOptions): UnaryCall<RenderFrameRequest, HttpBody>;
    /**
     * GetPointCloud returns a point cloud from a camera of the underlying robot. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: GetPointCloud(viam.component.camera.v1.GetPointCloudRequest) returns (viam.component.camera.v1.GetPointCloudResponse);
     */
    getPointCloud(input: GetPointCloudRequest, options?: RpcOptions): UnaryCall<GetPointCloudRequest, GetPointCloudResponse>;
    /**
     * GetProperties returns the camera intrinsic parameters and camera distortion parameters from a camera of the underlying robot, if available.
     *
     * @generated from protobuf rpc: GetProperties(viam.component.camera.v1.GetPropertiesRequest) returns (viam.component.camera.v1.GetPropertiesResponse);
     */
    getProperties(input: GetPropertiesRequest, options?: RpcOptions): UnaryCall<GetPropertiesRequest, GetPropertiesResponse>;
}
/**
 * A CameraService services all cameras associated with a robot
 *
 * @generated from protobuf service viam.component.camera.v1.CameraService
 */
export declare class CameraServiceClient implements ICameraServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * GetImage returns a frame from a camera of the underlying robot. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: GetImage(viam.component.camera.v1.GetImageRequest) returns (viam.component.camera.v1.GetImageResponse);
     */
    getImage(input: GetImageRequest, options?: RpcOptions): UnaryCall<GetImageRequest, GetImageResponse>;
    /**
     * RenderFrame renders a frame from a camera of the underlying robot to an HTTP response. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: RenderFrame(viam.component.camera.v1.RenderFrameRequest) returns (google.api.HttpBody);
     */
    renderFrame(input: RenderFrameRequest, options?: RpcOptions): UnaryCall<RenderFrameRequest, HttpBody>;
    /**
     * GetPointCloud returns a point cloud from a camera of the underlying robot. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: GetPointCloud(viam.component.camera.v1.GetPointCloudRequest) returns (viam.component.camera.v1.GetPointCloudResponse);
     */
    getPointCloud(input: GetPointCloudRequest, options?: RpcOptions): UnaryCall<GetPointCloudRequest, GetPointCloudResponse>;
    /**
     * GetProperties returns the camera intrinsic parameters and camera distortion parameters from a camera of the underlying robot, if available.
     *
     * @generated from protobuf rpc: GetProperties(viam.component.camera.v1.GetPropertiesRequest) returns (viam.component.camera.v1.GetPropertiesResponse);
     */
    getProperties(input: GetPropertiesRequest, options?: RpcOptions): UnaryCall<GetPropertiesRequest, GetPropertiesResponse>;
}
