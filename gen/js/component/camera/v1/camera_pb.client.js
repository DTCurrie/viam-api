// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/camera/v1/camera.proto" (package "viam.component.camera.v1", syntax proto3)
// tslint:disable
import { CameraService } from "./camera_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * A CameraService services all cameras associated with a robot
 *
 * @generated from protobuf service viam.component.camera.v1.CameraService
 */
export class CameraServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = CameraService.typeName;
        this.methods = CameraService.methods;
        this.options = CameraService.options;
    }
    /**
     * GetImage returns a frame from a camera of the underlying robot. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: GetImage(viam.component.camera.v1.GetImageRequest) returns (viam.component.camera.v1.GetImageResponse);
     */
    getImage(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * RenderFrame renders a frame from a camera of the underlying robot to an HTTP response. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: RenderFrame(viam.component.camera.v1.RenderFrameRequest) returns (google.api.HttpBody);
     */
    renderFrame(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * GetPointCloud returns a point cloud from a camera of the underlying robot. A specific MIME type
     * can be requested but may not necessarily be the same one returned.
     *
     * @generated from protobuf rpc: GetPointCloud(viam.component.camera.v1.GetPointCloudRequest) returns (viam.component.camera.v1.GetPointCloudResponse);
     */
    getPointCloud(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * GetProperties returns the camera intrinsic parameters and camera distortion parameters from a camera of the underlying robot, if available.
     *
     * @generated from protobuf rpc: GetProperties(viam.component.camera.v1.GetPropertiesRequest) returns (viam.component.camera.v1.GetPropertiesResponse);
     */
    getProperties(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
