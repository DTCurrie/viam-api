// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/audioinput/v1/audioinput.proto" (package "viam.component.audioinput.v1", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/audioinput/v1/audioinput.proto" (package "viam.component.audioinput.v1", syntax proto3)
// tslint:disable
import { HttpBody } from "../../../google/api/httpbody_pb";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../../google/protobuf/duration_pb";
/**
 * @generated from protobuf enum viam.component.audioinput.v1.SampleFormat
 */
export var SampleFormat;
(function (SampleFormat) {
    /**
     * @generated from protobuf enum value: SAMPLE_FORMAT_UNSPECIFIED = 0;
     */
    SampleFormat[SampleFormat["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from protobuf enum value: SAMPLE_FORMAT_INT16_INTERLEAVED = 1;
     */
    SampleFormat[SampleFormat["INT16_INTERLEAVED"] = 1] = "INT16_INTERLEAVED";
    /**
     * @generated from protobuf enum value: SAMPLE_FORMAT_FLOAT32_INTERLEAVED = 2;
     */
    SampleFormat[SampleFormat["FLOAT32_INTERLEAVED"] = 2] = "FLOAT32_INTERLEAVED";
})(SampleFormat || (SampleFormat = {}));
// @generated message type with reflection information, may provide speed optimized methods
class RecordRequest$Type extends MessageType {
    constructor() {
        super("viam.component.audioinput.v1.RecordRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "duration", kind: "message", T: () => Duration }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.RecordRequest
 */
export const RecordRequest = new RecordRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AudioChunkInfo$Type extends MessageType {
    constructor() {
        super("viam.component.audioinput.v1.AudioChunkInfo", [
            { no: 1, name: "sample_format", kind: "enum", T: () => ["viam.component.audioinput.v1.SampleFormat", SampleFormat, "SAMPLE_FORMAT_"] },
            { no: 2, name: "channels", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "sampling_rate", kind: "scalar", T: 3 /*ScalarType.INT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.AudioChunkInfo
 */
export const AudioChunkInfo = new AudioChunkInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AudioChunk$Type extends MessageType {
    constructor() {
        super("viam.component.audioinput.v1.AudioChunk", [
            { no: 1, name: "data", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "length", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.AudioChunk
 */
export const AudioChunk = new AudioChunk$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChunksRequest$Type extends MessageType {
    constructor() {
        super("viam.component.audioinput.v1.ChunksRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "sample_format", kind: "enum", T: () => ["viam.component.audioinput.v1.SampleFormat", SampleFormat, "SAMPLE_FORMAT_"] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.ChunksRequest
 */
export const ChunksRequest = new ChunksRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChunksResponse$Type extends MessageType {
    constructor() {
        super("viam.component.audioinput.v1.ChunksResponse", [
            { no: 1, name: "info", kind: "message", oneof: "type", T: () => AudioChunkInfo },
            { no: 2, name: "chunk", kind: "message", oneof: "type", T: () => AudioChunk }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.ChunksResponse
 */
export const ChunksResponse = new ChunksResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PropertiesRequest$Type extends MessageType {
    constructor() {
        super("viam.component.audioinput.v1.PropertiesRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.PropertiesRequest
 */
export const PropertiesRequest = new PropertiesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PropertiesResponse$Type extends MessageType {
    constructor() {
        super("viam.component.audioinput.v1.PropertiesResponse", [
            { no: 1, name: "channel_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "latency", kind: "message", T: () => Duration },
            { no: 3, name: "sample_rate", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "sample_size", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "is_big_endian", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "is_float", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "is_interleaved", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.PropertiesResponse
 */
export const PropertiesResponse = new PropertiesResponse$Type();
/**
 * @generated ServiceType for protobuf service viam.component.audioinput.v1.AudioInputService
 */
export const AudioInputService = new ServiceType("viam.component.audioinput.v1.AudioInputService", [
    { name: "Chunks", serverStreaming: true, options: {}, I: ChunksRequest, O: ChunksResponse },
    { name: "Properties", options: { "google.api.http": { get: "/viam/api/v1/component/audioinput/{name}/properties" } }, I: PropertiesRequest, O: PropertiesResponse },
    { name: "Record", options: { "google.api.http": { get: "/viam/api/v1/component/audioinput/{name}/record" } }, I: RecordRequest, O: HttpBody }
]);
