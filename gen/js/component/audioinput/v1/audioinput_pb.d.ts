// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/audioinput/v1/audioinput.proto" (package "viam.component.audioinput.v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../../google/protobuf/duration_pb";
/**
 * @generated from protobuf message viam.component.audioinput.v1.RecordRequest
 */
export interface RecordRequest {
    /**
     * Name of an audio input
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: google.protobuf.Duration duration = 2;
     */
    duration?: Duration;
}
/**
 * @generated from protobuf message viam.component.audioinput.v1.AudioChunkInfo
 */
export interface AudioChunkInfo {
    /**
     * Actual sample encoding format of the response
     *
     * @generated from protobuf field: viam.component.audioinput.v1.SampleFormat sample_format = 1;
     */
    sampleFormat: SampleFormat;
    /**
     * @generated from protobuf field: uint32 channels = 2;
     */
    channels: number;
    /**
     * @generated from protobuf field: int64 sampling_rate = 3;
     */
    samplingRate: string;
}
/**
 * @generated from protobuf message viam.component.audioinput.v1.AudioChunk
 */
export interface AudioChunk {
    /**
     * Data is PCM data that is organized according to the sample format
     * along with its possible interleaving. Data in each format is
     * Little Endian.
     *
     * @generated from protobuf field: bytes data = 1;
     */
    data: Uint8Array;
    /**
     * Length is the number of samples
     *
     * @generated from protobuf field: uint32 length = 2;
     */
    length: number;
}
/**
 * @generated from protobuf message viam.component.audioinput.v1.ChunksRequest
 */
export interface ChunksRequest {
    /**
     * Name of an audio input
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Requested sample encoding format of the response
     *
     * @generated from protobuf field: viam.component.audioinput.v1.SampleFormat sample_format = 2;
     */
    sampleFormat: SampleFormat;
}
/**
 * @generated from protobuf message viam.component.audioinput.v1.ChunksResponse
 */
export interface ChunksResponse {
    /**
     * @generated from protobuf oneof: type
     */
    type: {
        oneofKind: "info";
        /**
         * @generated from protobuf field: viam.component.audioinput.v1.AudioChunkInfo info = 1;
         */
        info: AudioChunkInfo;
    } | {
        oneofKind: "chunk";
        /**
         * @generated from protobuf field: viam.component.audioinput.v1.AudioChunk chunk = 2;
         */
        chunk: AudioChunk;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message viam.component.audioinput.v1.PropertiesRequest
 */
export interface PropertiesRequest {
    /**
     * Name of an audio input
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * @generated from protobuf message viam.component.audioinput.v1.PropertiesResponse
 */
export interface PropertiesResponse {
    /**
     * @generated from protobuf field: uint32 channel_count = 1;
     */
    channelCount: number;
    /**
     * @generated from protobuf field: google.protobuf.Duration latency = 2;
     */
    latency?: Duration;
    /**
     * @generated from protobuf field: uint32 sample_rate = 3;
     */
    sampleRate: number;
    /**
     * @generated from protobuf field: uint32 sample_size = 4;
     */
    sampleSize: number;
    /**
     * @generated from protobuf field: bool is_big_endian = 5;
     */
    isBigEndian: boolean;
    /**
     * @generated from protobuf field: bool is_float = 6;
     */
    isFloat: boolean;
    /**
     * @generated from protobuf field: bool is_interleaved = 7;
     */
    isInterleaved: boolean;
}
/**
 * @generated from protobuf enum viam.component.audioinput.v1.SampleFormat
 */
export declare enum SampleFormat {
    /**
     * @generated from protobuf enum value: SAMPLE_FORMAT_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: SAMPLE_FORMAT_INT16_INTERLEAVED = 1;
     */
    INT16_INTERLEAVED = 1,
    /**
     * @generated from protobuf enum value: SAMPLE_FORMAT_FLOAT32_INTERLEAVED = 2;
     */
    FLOAT32_INTERLEAVED = 2
}
declare class RecordRequest$Type extends MessageType<RecordRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.RecordRequest
 */
export declare const RecordRequest: RecordRequest$Type;
declare class AudioChunkInfo$Type extends MessageType<AudioChunkInfo> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.AudioChunkInfo
 */
export declare const AudioChunkInfo: AudioChunkInfo$Type;
declare class AudioChunk$Type extends MessageType<AudioChunk> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.AudioChunk
 */
export declare const AudioChunk: AudioChunk$Type;
declare class ChunksRequest$Type extends MessageType<ChunksRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.ChunksRequest
 */
export declare const ChunksRequest: ChunksRequest$Type;
declare class ChunksResponse$Type extends MessageType<ChunksResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.ChunksResponse
 */
export declare const ChunksResponse: ChunksResponse$Type;
declare class PropertiesRequest$Type extends MessageType<PropertiesRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.PropertiesRequest
 */
export declare const PropertiesRequest: PropertiesRequest$Type;
declare class PropertiesResponse$Type extends MessageType<PropertiesResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message viam.component.audioinput.v1.PropertiesResponse
 */
export declare const PropertiesResponse: PropertiesResponse$Type;
/**
 * @generated ServiceType for protobuf service viam.component.audioinput.v1.AudioInputService
 */
export declare const AudioInputService: any;
export {};
