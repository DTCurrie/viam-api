// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/gripper/v1/gripper.proto" (package "viam.component.gripper.v1", syntax proto3)
// tslint:disable
import { GripperService } from "./gripper_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * An GripperService services all grippers associated with a robot
 *
 * @generated from protobuf service viam.component.gripper.v1.GripperService
 */
export class GripperServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = GripperService.typeName;
        this.methods = GripperService.methods;
        this.options = GripperService.options;
    }
    /**
     * Open opens a gripper of the underlying robot.
     *
     * @generated from protobuf rpc: Open(viam.component.gripper.v1.OpenRequest) returns (viam.component.gripper.v1.OpenResponse);
     */
    open(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * Grab requests a gripper of the underlying robot to grab.
     *
     * @generated from protobuf rpc: Grab(viam.component.gripper.v1.GrabRequest) returns (viam.component.gripper.v1.GrabResponse);
     */
    grab(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * Stop stops a robot's gripper
     *
     * @generated from protobuf rpc: Stop(viam.component.gripper.v1.StopRequest) returns (viam.component.gripper.v1.StopResponse);
     */
    stop(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
