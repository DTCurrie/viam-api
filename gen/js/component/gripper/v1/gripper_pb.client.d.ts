// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/gripper/v1/gripper.proto" (package "viam.component.gripper.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { StopResponse } from "./gripper_pb";
import type { StopRequest } from "./gripper_pb";
import type { GrabResponse } from "./gripper_pb";
import type { GrabRequest } from "./gripper_pb";
import type { OpenResponse } from "./gripper_pb";
import type { OpenRequest } from "./gripper_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * An GripperService services all grippers associated with a robot
 *
 * @generated from protobuf service viam.component.gripper.v1.GripperService
 */
export interface IGripperServiceClient {
    /**
     * Open opens a gripper of the underlying robot.
     *
     * @generated from protobuf rpc: Open(viam.component.gripper.v1.OpenRequest) returns (viam.component.gripper.v1.OpenResponse);
     */
    open(input: OpenRequest, options?: RpcOptions): UnaryCall<OpenRequest, OpenResponse>;
    /**
     * Grab requests a gripper of the underlying robot to grab.
     *
     * @generated from protobuf rpc: Grab(viam.component.gripper.v1.GrabRequest) returns (viam.component.gripper.v1.GrabResponse);
     */
    grab(input: GrabRequest, options?: RpcOptions): UnaryCall<GrabRequest, GrabResponse>;
    /**
     * Stop stops a robot's gripper
     *
     * @generated from protobuf rpc: Stop(viam.component.gripper.v1.StopRequest) returns (viam.component.gripper.v1.StopResponse);
     */
    stop(input: StopRequest, options?: RpcOptions): UnaryCall<StopRequest, StopResponse>;
}
/**
 * An GripperService services all grippers associated with a robot
 *
 * @generated from protobuf service viam.component.gripper.v1.GripperService
 */
export declare class GripperServiceClient implements IGripperServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * Open opens a gripper of the underlying robot.
     *
     * @generated from protobuf rpc: Open(viam.component.gripper.v1.OpenRequest) returns (viam.component.gripper.v1.OpenResponse);
     */
    open(input: OpenRequest, options?: RpcOptions): UnaryCall<OpenRequest, OpenResponse>;
    /**
     * Grab requests a gripper of the underlying robot to grab.
     *
     * @generated from protobuf rpc: Grab(viam.component.gripper.v1.GrabRequest) returns (viam.component.gripper.v1.GrabResponse);
     */
    grab(input: GrabRequest, options?: RpcOptions): UnaryCall<GrabRequest, GrabResponse>;
    /**
     * Stop stops a robot's gripper
     *
     * @generated from protobuf rpc: Stop(viam.component.gripper.v1.StopRequest) returns (viam.component.gripper.v1.StopResponse);
     */
    stop(input: StopRequest, options?: RpcOptions): UnaryCall<StopRequest, StopResponse>;
}
