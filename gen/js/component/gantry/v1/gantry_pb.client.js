// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/gantry/v1/gantry.proto" (package "viam.component.gantry.v1", syntax proto3)
// tslint:disable
import { GantryService } from "./gantry_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * An GantryService services all gantries associated with a robot
 *
 * @generated from protobuf service viam.component.gantry.v1.GantryService
 */
export class GantryServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = GantryService.typeName;
        this.methods = GantryService.methods;
        this.options = GantryService.options;
    }
    /**
     * GetPosition gets the current position of a gantry of the underlying robot.
     *
     * @generated from protobuf rpc: GetPosition(viam.component.gantry.v1.GetPositionRequest) returns (viam.component.gantry.v1.GetPositionResponse);
     */
    getPosition(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * MoveToPosition moves a gantry of the underlying robot to the requested position.
     *
     * @generated from protobuf rpc: MoveToPosition(viam.component.gantry.v1.MoveToPositionRequest) returns (viam.component.gantry.v1.MoveToPositionResponse);
     */
    moveToPosition(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * GetLengths gets the lengths of a gantry of the underlying robot.
     *
     * @generated from protobuf rpc: GetLengths(viam.component.gantry.v1.GetLengthsRequest) returns (viam.component.gantry.v1.GetLengthsResponse);
     */
    getLengths(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * Stop stops a robot's gantry
     *
     * @generated from protobuf rpc: Stop(viam.component.gantry.v1.StopRequest) returns (viam.component.gantry.v1.StopResponse);
     */
    stop(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
