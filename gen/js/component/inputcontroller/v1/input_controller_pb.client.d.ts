// @generated by protobuf-ts 2.8.1 with parameter add_pb_suffix,generate_dependencies,force_optimize_code_size,long_type_string,output_javascript
// @generated from protobuf file "component/inputcontroller/v1/input_controller.proto" (package "viam.component.inputcontroller.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { TriggerEventResponse } from "./input_controller_pb";
import type { TriggerEventRequest } from "./input_controller_pb";
import type { StreamEventsResponse } from "./input_controller_pb";
import type { StreamEventsRequest } from "./input_controller_pb";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { GetEventsResponse } from "./input_controller_pb";
import type { GetEventsRequest } from "./input_controller_pb";
import type { GetControlsResponse } from "./input_controller_pb";
import type { GetControlsRequest } from "./input_controller_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * InputControllerService servicestains all input controller associated with a robot
 *
 * @generated from protobuf service viam.component.inputcontroller.v1.InputControllerService
 */
export interface IInputControllerServiceClient {
    /**
     * GetControls returns a list of GetControls provided by the Controller
     *
     * @generated from protobuf rpc: GetControls(viam.component.inputcontroller.v1.GetControlsRequest) returns (viam.component.inputcontroller.v1.GetControlsResponse);
     */
    getControls(input: GetControlsRequest, options?: RpcOptions): UnaryCall<GetControlsRequest, GetControlsResponse>;
    /**
     * GetEvents returns a list of events representing the last event on each control of a give Input Controller
     *
     * @generated from protobuf rpc: GetEvents(viam.component.inputcontroller.v1.GetEventsRequest) returns (viam.component.inputcontroller.v1.GetEventsResponse);
     */
    getEvents(input: GetEventsRequest, options?: RpcOptions): UnaryCall<GetEventsRequest, GetEventsResponse>;
    /**
     * StreamEvents starts a stream of InputControllerEvents for the given controls (buttons/axes) on a robot's input controller
     *
     * @generated from protobuf rpc: StreamEvents(viam.component.inputcontroller.v1.StreamEventsRequest) returns (stream viam.component.inputcontroller.v1.StreamEventsResponse);
     */
    streamEvents(input: StreamEventsRequest, options?: RpcOptions): ServerStreamingCall<StreamEventsRequest, StreamEventsResponse>;
    /**
     * TriggerEvent, where supported, injects an InputControllerEvent into an input controller to (virtually) generate events
     * like button presses or axis movements
     *
     * @generated from protobuf rpc: TriggerEvent(viam.component.inputcontroller.v1.TriggerEventRequest) returns (viam.component.inputcontroller.v1.TriggerEventResponse);
     */
    triggerEvent(input: TriggerEventRequest, options?: RpcOptions): UnaryCall<TriggerEventRequest, TriggerEventResponse>;
}
/**
 * InputControllerService servicestains all input controller associated with a robot
 *
 * @generated from protobuf service viam.component.inputcontroller.v1.InputControllerService
 */
export declare class InputControllerServiceClient implements IInputControllerServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * GetControls returns a list of GetControls provided by the Controller
     *
     * @generated from protobuf rpc: GetControls(viam.component.inputcontroller.v1.GetControlsRequest) returns (viam.component.inputcontroller.v1.GetControlsResponse);
     */
    getControls(input: GetControlsRequest, options?: RpcOptions): UnaryCall<GetControlsRequest, GetControlsResponse>;
    /**
     * GetEvents returns a list of events representing the last event on each control of a give Input Controller
     *
     * @generated from protobuf rpc: GetEvents(viam.component.inputcontroller.v1.GetEventsRequest) returns (viam.component.inputcontroller.v1.GetEventsResponse);
     */
    getEvents(input: GetEventsRequest, options?: RpcOptions): UnaryCall<GetEventsRequest, GetEventsResponse>;
    /**
     * StreamEvents starts a stream of InputControllerEvents for the given controls (buttons/axes) on a robot's input controller
     *
     * @generated from protobuf rpc: StreamEvents(viam.component.inputcontroller.v1.StreamEventsRequest) returns (stream viam.component.inputcontroller.v1.StreamEventsResponse);
     */
    streamEvents(input: StreamEventsRequest, options?: RpcOptions): ServerStreamingCall<StreamEventsRequest, StreamEventsResponse>;
    /**
     * TriggerEvent, where supported, injects an InputControllerEvent into an input controller to (virtually) generate events
     * like button presses or axis movements
     *
     * @generated from protobuf rpc: TriggerEvent(viam.component.inputcontroller.v1.TriggerEventRequest) returns (viam.component.inputcontroller.v1.TriggerEventResponse);
     */
    triggerEvent(input: TriggerEventRequest, options?: RpcOptions): UnaryCall<TriggerEventRequest, TriggerEventResponse>;
}
